SAIL_DIR=`pwd` SAIL=`pwd`/sail test/run_tests.sh

==========================================
Lexing tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
-------------
Testing lexer
-------------
Running 16 tests in parallel. Set TEST_PAR to configure
help_option_pragma.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
cr_invisible.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
illegal_escape.sail .................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unknown_operator.sail .................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
bad_option_pragma.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
pragma_block.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
doc_comment_eof.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unbalanced_comment2.sail ............... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unterminated_ifdef.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
line_comment_eof.sail .................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
import_reserved.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
module_reserved.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unbalanced_comment.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
bad_option_pragma2.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unterminated_string.sail ............... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
extended_ascii.sail .................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
[94m16 passes and 0 failures[0m

==========================================
Pattern completeness tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
------------------------------------
Testing pattern completeness checker
------------------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
mapping_let.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unbounded_int_annot.sail ............... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_empty_list.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_cons_incomplete.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
int_pattern.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_double_cons_incomplete.sail ....... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_int_pattern.sail .................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
some_none.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
two_argument.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_struct_pattern_incomplete.sail .... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
constrained_function.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
set_match.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
cons_wildcard_insert.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_unbounded_nat.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_cons_wildcard_insert2.sail ........ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_cannot_wildcard.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
warn_partial_lookup.sail ............... [92mok[0m
warn_unbounded_int.sail ................ [92mok[0m
some_none_int.sail ..................... [92mok[0m
lookup.sail ............................ [92mok[0m
warn_range_redundant.sail .............. [92mok[0m
constrained_function_scattered.sail .... [92mok[0m
warn_partial_scattered.sail ............ [92mok[0m
range.sail ............................. [92mok[0m
warn_tuple_bitvector_pat.sail .......... [92mok[0m
struct_pattern.sail .................... [92mok[0m
warn_cons_wildcard_insert1.sail ........ [92mok[0m
warn_missing_enum.sail ................. [92mok[0m
warn_mapping_imcomplete.sail ........... [92mok[0m
[94m29 passes and 0 failures[0m

==========================================
Typechecking tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
------------------------
Testing passing programs
------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
default_order.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
add_vec_exts_no_annot.sail ............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
bitwise_not_gen.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
real.sail .............................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
deinfix_plus.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
function_namespace.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
overload_overload.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
floor_pow2.sail ........................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
funcl_guard.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_concat_assign.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist_synonym.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist2.sail ............................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
lexp_vec.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
implicits.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_subrange_pattern.sail ........... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
while_PM.sail .......................... [92mok[0m
varity.sail ............................ [92mok[0m
as_pattern.sail ........................ [92mok[0m
vec_pat1.sail .......................... [92mok[0m
while_PP.sail .......................... [92mok[0m
atomcase.sail .......................... [92mok[0m
repeat_constraint.sail ................. [92mok[0m
vector_subrange_gen.sail ............... [92mok[0m
vec_length_inc.sail .................... [92mok[0m
equation_return.sail ................... [92mok[0m
true_false.sail ........................ [92mok[0m
wildcard_mapping.sail .................. [92mok[0m
nlflow.sail ............................ [92mok[0m
tuple_bitvector_int_pat.sail ........... [92mok[0m
existential_ast.sail ................... [92mok[0m
existential_ast3.sail .................. [92mok[0m
exit2.sail ............................. [92mok[0m
add_real.sail .......................... [92mok[0m
arm_FPEXC1.sail ........................ [92mok[0m
commentfix.sail ........................ [92mok[0m
extension_constructor.sail ............. [92mok[0m
return_simple4.sail .................... [92mok[0m
sizeof_fixed.sail ...................... [92mok[0m
bool_mapping.sail ...................... [92mok[0m
multiple_unifiers.sail ................. [92mok[0m
tautology.sail ......................... [92mok[0m
constraint_syn.sail .................... [92mok[0m
flow_lteq1.sail ........................ [92mok[0m
constraint_ctor.sail ................... [92mok[0m
Replicate.sail ......................... [92mok[0m
arm_types.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [92mok[0m
pat_completeness.sail .................. [92mok[0m
nzcv.sail .............................. [92mok[0m
exit3.sail ............................. [92mok[0m
patternrefinement.sail ................. [92mok[0m
bind_typ_var.sail ...................... [92mok[0m
custom_flow.sail ....................... [92mok[0m
struct_field_constraint.sail ........... [92mok[0m
decode_patterns.sail ................... [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
bool_mapping2.sail ..................... [92mok[0m
execute_decode_hard.sail ............... [92mok[0m
overload_int_nat.sail .................. [92mok[0m
poly_list.sail ......................... [92mok[0m
string_append_non_exec.sail ............ [92mok[0m
vector_pattern_split.sail .............. [92mok[0m
wf_specs.sail .......................... [92mok[0m
cons_pattern.sail ...................... [92mok[0m
if_var_updates.sail .................... [92mok[0m
list_cons2.sail ........................ [92mok[0m
option_tuple.sail ...................... [92mok[0m
return_simple1.sail .................... [92mok[0m
list_lit.sail .......................... [92mok[0m
complex_exist_sat.sail ................. [92mok[0m
vector_subrange_mapping.sail ........... [92mok[0m
type_if_then_else.sail ................. [92mok[0m
complete_pattern_let.sail .............. [92mok[0m
allpats.sail ........................... [92mok[0m
exist1.sail ............................ [92mok[0m
fpthreesimp.sail ....................... [92mok[0m
tuple_assign.sail ...................... [92mok[0m
short_circuit_bool_ex.sail ............. [92mok[0m
ex_vector_infer.sail ................... [92mok[0m
union_infer.sail ....................... [92mok[0m
bitwise_not.sail ....................... [92mok[0m
procstate1.sail ........................ [92mok[0m
anon_rec.sail .......................... [92mok[0m
mod_var.sail ........................... [92mok[0m
option_either.sail ..................... [92mok[0m
reg_mod.sail ........................... [92mok[0m
simple_record_access.sail .............. [92mok[0m
add_vec_lit.sail ....................... [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
abstract_bool2.sail .................... [92mok[0m
set_constraint.sail .................... [92mok[0m
type_div.sail .......................... [92mok[0m
bitfield_updates0.sail ................. [92mok[0m
global_type_var.sail ................... [92mok[0m
pow_32_64.sail ......................... [92mok[0m
reg_list.sail .......................... [92mok[0m
assignment_simple.sail ................. [92mok[0m
while_MP.sail .......................... [92mok[0m
exist_true.sail ........................ [92mok[0m
case_simple2.sail ...................... [92mok[0m
equation_arguments.sail ................ [92mok[0m
abstract_bool.sail ..................... [92mok[0m
pow_unify.sail ......................... [92mok[0m
pure_let_var2.sail ..................... [92mok[0m
tuple_fun.sail ......................... [92mok[0m
pure_let_var.sail ...................... [92mok[0m
flow_gteq1.sail ........................ [92mok[0m
mutrec.sail ............................ [92mok[0m
poly_vector.sail ....................... [92mok[0m
if_infer.sail .......................... [92mok[0m
exist_tlb.sail ......................... [92mok[0m
cons_pattern_synonym.sail .............. [92mok[0m
overlap_field.sail ..................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
let_subtyp_bug.sail .................... [92mok[0m
reg_option.sail ........................ [92mok[0m
pure_record2.sail ...................... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
inc_prelude.sail ....................... [92mok[0m
phantom_bitlist_struct.sail ............ [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
bitfield_abs.sail ...................... [92mok[0m
bitfield_mod.sail ...................... [92mok[0m
tuple_bitvector_int_pat3.sail .......... [92mok[0m
tuple_bitvector_int_pat2.sail .......... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
mapping_clause.sail .................... [92mok[0m
bool_typ_pat.sail ...................... [92mok[0m
enum_map.sail .......................... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
exit1.sail ............................. [92mok[0m
pure_record.sail ....................... [92mok[0m
simple_scattered.sail .................. [92mok[0m
issue250.sail .......................... [92mok[0m
plus_one_unify.sail .................... [92mok[0m
existential_constraint_synonym.sail .... [92mok[0m
int_synonym.sail ....................... [92mok[0m
modify_type_chain.sail ................. [92mok[0m
dec_prelude.sail ....................... [92mok[0m
rmem_rmemt_same.sail ................... [92mok[0m
no_val_recur.sail ...................... [92mok[0m
unsigned_index.sail .................... [92mok[0m
if_return.sail ......................... [92mok[0m
recursion.sail ......................... [92mok[0m
flow_gt1.sail .......................... [92mok[0m
string_literal_type.sail ............... [92mok[0m
scattered_union_doc.sail ............... [92mok[0m
single_enum.sail ....................... [92mok[0m
vector_append_gen.sail ................. [92mok[0m
exist_subrange.sail .................... [92mok[0m
cast_simple.sail ....................... [92mok[0m
return_simple2.sail .................... [92mok[0m
scattered_enum.sail .................... [92mok[0m
eqn_inst.sail .......................... [92mok[0m
ex_list_infer.sail ..................... [92mok[0m
if_type_if.sail ........................ [92mok[0m
shadow_let.sail ........................ [92mok[0m
bits_concat_pattern.sail ............... [92mok[0m
flow_lt1.sail .......................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
vec_length.sail ........................ [92mok[0m
reg_32_64.sail ......................... [92mok[0m
ex_cast.sail ........................... [92mok[0m
lt_flow.sail ........................... [92mok[0m
overload_plus.sail ..................... [92mok[0m
cast_lexp1.sail ........................ [92mok[0m
exist_simple.sail ...................... [92mok[0m
bitvector_param.sail ................... [92mok[0m
crlf.sail .............................. [92mok[0m
zero_length_bv.sail .................... [92mok[0m
mapping_rreg.sail ...................... [92mok[0m
if_infer2.sail ......................... [92mok[0m
bitfield_exponential.sail .............. [92mok[0m
struct_pattern.sail .................... [92mok[0m
tyvar_shadow.sail ...................... [92mok[0m
bitfield_updates.sail .................. [92mok[0m
list_infer.sail ........................ [92mok[0m
constrained_struct.sail ................ [92mok[0m
bitwise_not_x3.sail .................... [92mok[0m
nat_set.sail ........................... [92mok[0m
single_union.sail ...................... [92mok[0m
case_simple1.sail ...................... [92mok[0m
return_simple3.sail .................... [92mok[0m
foreach_var_updates.sail ............... [92mok[0m
exint.sail ............................. [92mok[0m
zeros_implicit.sail .................... [92mok[0m
phantom_bitlist_union.sail ............. [92mok[0m
union_ctor_constraint.sail ............. [92mok[0m
guards.sail ............................ [92mok[0m
new_bitfields.sail ..................... [92mok[0m
scattered_mapping_doc.sail ............. [92mok[0m
existential_ast2.sail .................. [92mok[0m
bool_constraint.sail ................... [92mok[0m
concurrency_interface_dec.sail ......... [92mok[0m
add_vec_exts_no_annot_overload.sail .... [92mok[0m
phantom_num.sail ....................... [92mok[0m
bitfield_pc.sail ....................... [92mok[0m
nexp_synonym2.sail ..................... [92mok[0m
single_assign_in_block.sail ............ [92mok[0m
try_while_try.sail ..................... [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
inline_typ.sail ........................ [92mok[0m
synth_ex_vs.sail ....................... [92mok[0m
type_if_then_else_alt.sail ............. [92mok[0m
flow_lt2.sail .......................... [92mok[0m
not_pattern.sail ....................... [92mok[0m
tuple_type_cast.sail ................... [92mok[0m
enum_cast.sail ......................... [92mok[0m
negative_bits_list.sail ................ [92mok[0m
outcome_impl.sail ...................... [92mok[0m
vector_access_dec.sail ................. [92mok[0m
bv_simple_index_bit.sail ............... [92mok[0m
while_MM.sail .......................... [92mok[0m
vector_access.sail ..................... [92mok[0m
list_cons.sail ......................... [92mok[0m
cast_lexp2.sail ........................ [92mok[0m
modify_assignment1.sail ................ [92mok[0m
priv_fn_no_val.sail .................... [92mok[0m
pure_record3.sail ...................... [92mok[0m
bits_if.sail ........................... [92mok[0m
issue434.sail .......................... [92mok[0m
phantom_option.sail .................... [92mok[0m
outcome_impl_quant.sail ................ [92mok[0m
foreach_e.sail ......................... [92mok[0m
wf_register_type.sail .................. [92mok[0m
[94m222 passes and 0 failures[0m
------------------------
Testing failing programs
------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
synonym_rec.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
duplicate_type_id.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
undefined_infer.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
scattered_map_mod.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
duplicate_type_id4.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
strict_var.sail ........................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
prelude_no_order.sail .................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
scattered_enum_mod.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
add_vec_lit_old.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
struct_pattern_duplicate_field.sail .... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
and_let_bool.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
unbound_tyvar2.sail .................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
mapping_body_private.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
negative_bits_existential.sail ......... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
issue277.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
modify_enum2.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
union_rec.sail ......................... [92mok[0m
scattered_union_mod.sail ............... [92mok[0m
enum_functions_partial.sail ............ [92mok[0m
enum_shadow_let.sail ................... [92mok[0m
scattered_function_mod.sail ............ [92mok[0m
unbound_tyvar.sail ..................... [92mok[0m
missing_tick.sail ...................... [92mok[0m
modify_immutable2.sail ................. [92mok[0m
issue244_3.sail ........................ [92mok[0m
undeclared_field_assignment.sail ....... [92mok[0m
mix_declaration_update.sail ............ [92mok[0m
pub_val_priv_fn.sail ................... [92mok[0m
abstract_bool_inconsistent.sail ........ [92mok[0m
duplicate_toplevel_let.sail ............ [92mok[0m
vector_pattern_split.sail .............. [92mok[0m
issue243.sail .......................... [92mok[0m
duplicate_type_id6.sail ................ [92mok[0m
overload_member_scope.sail ............. [92mok[0m
assignment_simple.sail ................. [92mok[0m
procstate1.sail ........................ [92mok[0m
duplicate_type_id2.sail ................ [92mok[0m
scattered_union_rec.sail ............... [92mok[0m
private_extension.sail ................. [92mok[0m
bv_update_error.sail ................... [92mok[0m
unscope_val.sail ....................... [92mok[0m
poly_ab_mapping.sail ................... [92mok[0m
duplicate_quant.sail ................... [92mok[0m
negative_bits_struct.sail .............. [92mok[0m
non_synonym.sail ....................... [92mok[0m
struct_incomplete_literal.sail ......... [92mok[0m
negative_bits_struct2.sail ............. [92mok[0m
mapping_two_type.sail .................. [92mok[0m
duplicate_ctor.sail .................... [92mok[0m
union_recf.sail ........................ [92mok[0m
private_scattered_map.sail ............. [92mok[0m
private_scattered_enum.sail ............ [92mok[0m
struct_rec.sail ........................ [92mok[0m
bitfield_bits_field.sail ............... [92mok[0m
issue244_4.sail ........................ [92mok[0m
issue244_1.sail ........................ [92mok[0m
private_union.sail ..................... [92mok[0m
private_ctor.sail ...................... [92mok[0m
empty_su.sail .......................... [92mok[0m
empty_vector_infer.sail ................ [92mok[0m
encdec_unknown_and_error.sail .......... [92mok[0m
negative_bits_tuple.sail ............... [92mok[0m
mapping_length_mismatch.sail ........... [92mok[0m
enum_function_override.sail ............ [92mok[0m
private_scattered_union.sail ........... [92mok[0m
duplicate_type_id3.sail ................ [92mok[0m
duplicate_builtin.sail ................. [92mok[0m
global_false_constraint.sail ........... [92mok[0m
private_scattered_fn.sail .............. [92mok[0m
shadow_leak_infer.sail ................. [92mok[0m
shadow_leak_check.sail ................. [92mok[0m
negative_bits_union2.sail .............. [92mok[0m
no_function3.sail ...................... [92mok[0m
undeclared_vector_assignment.sail ...... [92mok[0m
duplicate_binding.sail ................. [92mok[0m
private_function.sail .................. [92mok[0m
no_possible_overload.sail .............. [92mok[0m
issue244_2.sail ........................ [92mok[0m
negative_bits_union.sail ............... [92mok[0m
invalid_function_val.sail .............. [92mok[0m
duplicate_type_id5.sail ................ [92mok[0m
overload_bound.sail .................... [92mok[0m
private_clause.sail .................... [92mok[0m
enum_shadow_reg.sail ................... [92mok[0m
cond_mod.sail .......................... [92mok[0m
duplicate_toplevel_let_mod.sail ........ [92mok[0m
enum_shadow.sail ....................... [92mok[0m
nonexistent_overload.sail .............. [92mok[0m
no_function2.sail ...................... [92mok[0m
no_function.sail ....................... [92mok[0m
modify_immutable.sail .................. [92mok[0m
unscope_let.sail ....................... [92mok[0m
unscope_type.sail ...................... [92mok[0m
bitfield_error.sail .................... [92mok[0m
modify_enum.sail ....................... [92mok[0m
unscope_enum.sail ...................... [92mok[0m
unscope_register.sail .................. [92mok[0m
wf_assign_type.sail .................... [92mok[0m
[94m98 passes and 0 failures[0m

==========================================
OCaml tests
==========================================
$SAIL is /home/trdthg/repo/sail/sail
built bitfield/: [0;92mok[0m
built for_bounds/: [0;92mok[0m
built hello_world/: [0;92mok[0m
built is_x_subrange/: [0;92mok[0m
built loop/: [0;92mok[0m
built lsl/: [0;92mok[0m
built new_bitfields/: [0;92mok[0m
built pattern1/: [0;92mok[0m
built pure_rebind/: [0;92mok[0m
built reg_alias/: [0;92mok[0m
built reg_passing/: [0;92mok[0m
built reg_ref/: [0;92mok[0m
built short_circuit/: [0;92mok[0m
built string_equality/: [0;92mok[0m
built string_of_struct/: [0;92mok[0m
built trycatch/: [0;92mok[0m
built types/: [0;92mok[0m
built vec_32_64/: [0;92mok[0m
built void/: [0;92mok[0m
Ocaml testing: Passed 19 out of 19

built bitfield/: [0;92mok[0m
built for_bounds/: [0;92mok[0m
built hello_world/: [0;92mok[0m
built is_x_subrange/: [0;92mok[0m
built loop/: [0;92mok[0m
built lsl/: [0;92mok[0m
built new_bitfields/: [0;92mok[0m
built pattern1/: [0;92mok[0m
built pure_rebind/: [0;92mok[0m
built reg_alias/: [0;92mok[0m
built reg_passing/: [0;92mok[0m
built reg_ref/: [0;92mok[0m
built short_circuit/: [0;92mok[0m
built string_equality/: [0;92mok[0m
built string_of_struct/: [0;92mok[0m
built trycatch/: [0;92mok[0m
built types/: [0;92mok[0m
built vec_32_64/: [0;92mok[0m
built void/: [0;92mok[0m
Ocaml trace testing: Passed 19 out of 19


==========================================
Floating point tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
---------------------------------------------------------------------
Testing floating point c optimized with C options: -O2 Sail options: 
---------------------------------------------------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
zero_test.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
sign_test.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
normal_test.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
nan_test.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
inf_test.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
ne_test.sail ........................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
eq_test.sail ........................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
lt_test.sail ........................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
[94m8 passes and 0 failures[0m

==========================================
Lem tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
-------------------------
Testing Lem with bitlists
-------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
deinfix_plus.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
function_namespace.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
real.sail .............................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
add_vec_exts_no_annot.sail ............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
default_order.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
bitwise_not_gen.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
lexp_vec.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
funcl_guard.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist_synonym.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_subrange_pattern.sail ........... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
implicits.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
floor_pow2.sail ........................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
overload_overload.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_concat_assign.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist2.sail ............................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
while_PP.sail .......................... [92mok[0m
while_PM.sail .......................... [92mok[0m
as_pattern.sail ........................ [92mok[0m
vec_length_inc.sail .................... [92mok[0m
varity.sail ............................ [92mok[0m
repeat_constraint.sail ................. [92mok[0m
wildcard_mapping.sail .................. [92mok[0m
equation_return.sail ................... [92mok[0m
atomcase.sail .......................... [92mok[0m
vector_subrange_gen.sail ............... [92mok[0m
true_false.sail ........................ [92mok[0m
vec_pat1.sail .......................... [92mok[0m
nlflow.sail ............................ [92mok[0m
tuple_bitvector_int_pat.sail ........... [92mok[0m
existential_ast3.sail .................. [92mok[0m
existential_ast.sail ................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
extension_constructor.sail ............. [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
exit2.sail ............................. [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
arm_FPEXC1.sail ........................ [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
commentfix.sail ........................ [92mok[0m
add_real.sail .......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_ctor.sail ................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_syn.sail .................... [93mskip[0m
multiple_unifiers.sail ................. [92mok[0m
return_simple4.sail .................... [92mok[0m
sizeof_fixed.sail ...................... [92mok[0m
bool_mapping.sail ...................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
Replicate.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
flow_lteq1.sail ........................ [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
tautology.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
arm_types.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_syn.sail .................... [93mskip[0m
pat_completeness.sail .................. [92mok[0m
nzcv.sail .............................. [92mok[0m
exit3.sail ............................. [92mok[0m
patternrefinement.sail ................. [92mok[0m
poly_list.sail ......................... [92mok[0m
bind_typ_var.sail ...................... [92mok[0m
overload_int_nat.sail .................. [92mok[0m
wf_specs.sail .......................... [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
custom_flow.sail ....................... [92mok[0m
vector_pattern_split.sail .............. [92mok[0m
bool_mapping2.sail ..................... [92mok[0m
decode_patterns.sail ................... [92mok[0m
execute_decode_hard.sail ............... [92mok[0m
struct_field_constraint.sail ........... [92mok[0m
string_append_non_exec.sail ............ [92mok[0m
cons_pattern.sail ...................... [92mok[0m
list_lit.sail .......................... [92mok[0m
return_simple1.sail .................... [92mok[0m
list_cons2.sail ........................ [92mok[0m
option_tuple.sail ...................... [92mok[0m
if_var_updates.sail .................... [92mok[0m
complex_exist_sat.sail ................. [92mok[0m
tuple_assign.sail ...................... [92mok[0m
type_if_then_else.sail ................. [92mok[0m
ex_vector_infer.sail ................... [92mok[0m
complete_pattern_let.sail .............. [92mok[0m
vector_subrange_mapping.sail ........... [92mok[0m
allpats.sail ........................... [92mok[0m
short_circuit_bool_ex.sail ............. [92mok[0m
fpthreesimp.sail ....................... [92mok[0m
exist1.sail ............................ [92mok[0m
simple_record_access.sail .............. [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
mod_var.sail ........................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
union_infer.sail ....................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
bitwise_not.sail ....................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
procstate1.sail ........................ [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
anon_rec.sail .......................... [92mok[0m
option_either.sail ..................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
nonexistent_pragma.sail ................ [92mok[0m
type_div.sail .......................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
add_vec_lit.sail ....................... [92mok[0m
set_constraint.sail .................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
reg_mod.sail ........................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
global_type_var.sail ................... [92mok[0m
bitfield_updates0.sail ................. [92mok[0m
pow_32_64.sail ......................... [92mok[0m
abstract_bool2.sail .................... [93mskip[0m
reg_list.sail .......................... [92mok[0m
while_MP.sail .......................... [92mok[0m
assignment_simple.sail ................. [92mok[0m
case_simple2.sail ...................... [92mok[0m
exist_true.sail ........................ [92mok[0m
pure_let_var.sail ...................... [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
equation_arguments.sail ................ [92mok[0m
pure_let_var2.sail ..................... [92mok[0m
pow_unify.sail ......................... [92mok[0m
mutrec.sail ............................ [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
flow_gteq1.sail ........................ [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
if_infer.sail .......................... [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
poly_vector.sail ....................... [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
tuple_fun.sail ......................... [92mok[0m
exist_tlb.sail ......................... [92mok[0m
abstract_bool.sail ..................... [93mskip[0m
cons_pattern_synonym.sail .............. [92mok[0m
reg_option.sail ........................ [92mok[0m
overlap_field.sail ..................... [92mok[0m
pure_record2.sail ...................... [92mok[0m
enum_map.sail .......................... [92mok[0m
phantom_bitlist_struct.sail ............ [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
inc_prelude.sail ....................... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
bitfield_abs.sail ...................... [92mok[0m
bool_typ_pat.sail ...................... [92mok[0m
let_subtyp_bug.sail .................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
bitfield_mod.sail ...................... [92mok[0m
tuple_bitvector_int_pat2.sail .......... [92mok[0m
tuple_bitvector_int_pat3.sail .......... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
mapping_clause.sail .................... [92mok[0m
type_pow_zero.sail ..................... [93mskip[0m
simple_scattered.sail .................. [92mok[0m
pure_record.sail ....................... [92mok[0m
exit1.sail ............................. [92mok[0m
issue250.sail .......................... [92mok[0m
existential_constraint_synonym.sail .... [92mok[0m
plus_one_unify.sail .................... [92mok[0m
string_literal_type.sail ............... [92mok[0m
dec_prelude.sail ....................... [92mok[0m
rmem_rmemt_same.sail ................... [92mok[0m
no_val_recur.sail ...................... [92mok[0m
int_synonym.sail ....................... [92mok[0m
if_return.sail ......................... [92mok[0m
unsigned_index.sail .................... [92mok[0m
flow_gt1.sail .......................... [92mok[0m
modify_type_chain.sail ................. [92mok[0m
recursion.sail ......................... [92mok[0m
scattered_enum.sail .................... [92mok[0m
scattered_union_doc.sail ............... [92mok[0m
vec_length.sail ........................ [92mok[0m
return_simple2.sail .................... [92mok[0m
single_enum.sail ....................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
cast_simple.sail ....................... [92mok[0m
exist_subrange.sail .................... [92mok[0m
eqn_inst.sail .......................... [92mok[0m
vector_append_gen.sail ................. [92mok[0m
ex_list_infer.sail ..................... [92mok[0m
if_type_if.sail ........................ [92mok[0m
flow_lt1.sail .......................... [92mok[0m
bits_concat_pattern.sail ............... [92mok[0m
shadow_let.sail ........................ [92mok[0m
reg_32_64.sail ......................... [92mok[0m
overload_plus.sail ..................... [92mok[0m
lt_flow.sail ........................... [92mok[0m
ex_cast.sail ........................... [92mok[0m
crlf.sail .............................. [92mok[0m
cast_lexp1.sail ........................ [92mok[0m
zero_length_bv.sail .................... [92mok[0m
if_infer2.sail ......................... [92mok[0m
bitvector_param.sail ................... [92mok[0m
constrained_struct.sail ................ [92mok[0m
struct_pattern.sail .................... [92mok[0m
bitfield_updates.sail .................. [92mok[0m
exist_simple.sail ...................... [92mok[0m
tyvar_shadow.sail ...................... [92mok[0m
list_infer.sail ........................ [92mok[0m
bitfield_exponential.sail .............. [92mok[0m
mapping_rreg.sail ...................... [92mok[0m
bitwise_not_x3.sail .................... [92mok[0m
single_union.sail ...................... [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
nat_set.sail ........................... [92mok[0m
case_simple1.sail ...................... [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
return_simple3.sail .................... [92mok[0m
union_ctor_constraint.sail ............. [92mok[0m
foreach_var_updates.sail ............... [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
guards.sail ............................ [92mok[0m
exint.sail ............................. [92mok[0m
scattered_mapping_doc.sail ............. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
bool_constraint.sail ................... [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
zeros_implicit.sail .................... [92mok[0m
existential_ast2.sail .................. [92mok[0m
phantom_bitlist_union.sail ............. [93mskip[0m
concurrency_interface_dec.sail ......... [93mskip[0m
add_vec_exts_no_annot_overload.sail .... [92mok[0m
phantom_num.sail ....................... [92mok[0m
not_pattern.sail ....................... [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
negative_bits_list.sail ................ [92mok[0m
synth_ex_vs.sail ....................... [92mok[0m
inline_typ.sail ........................ [92mok[0m
bitfield_pc.sail ....................... [92mok[0m
nexp_synonym2.sail ..................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
type_if_then_else_alt.sail ............. [92mok[0m
flow_lt2.sail .......................... [92mok[0m
try_while_try.sail ..................... [92mok[0m
single_assign_in_block.sail ............ [92mok[0m
enum_cast.sail ......................... [92mok[0m
tuple_type_cast.sail ................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
vector_access.sail ..................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
cast_lexp2.sail ........................ [92mok[0m
phantom_option.sail .................... [93mskip[0m
while_MM.sail .......................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
list_cons.sail ......................... [92mok[0m
vector_access_dec.sail ................. [92mok[0m
phantom_option.sail .................... [93mskip[0m
priv_fn_no_val.sail .................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
bv_simple_index_bit.sail ............... [92mok[0m
phantom_option.sail .................... [93mskip[0m
bits_if.sail ........................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
pure_record3.sail ...................... [92mok[0m
wf_register_type.sail .................. [92mok[0m
phantom_option.sail .................... [93mskip[0m
outcome_impl_quant.sail ................ [92mok[0m
phantom_option.sail .................... [93mskip[0m
issue434.sail .......................... [92mok[0m
modify_assignment1.sail ................ [92mok[0m
phantom_option.sail .................... [93mskip[0m
foreach_e.sail ......................... [92mok[0m
phantom_option.sail .................... [93mskip[0m
[94m215 passes and 0 failures[0m
------------------------------
Testing Lem with machine words
------------------------------
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [93mskip[0m
real.sail .............................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
add_vec_exts_no_annot.sail ............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
deinfix_plus.sail ...................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [93mskip[0m
function_namespace.sail ................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [93mskip[0m
bitwise_not_gen.sail ................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
default_order.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist_synonym.sail ..................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
exist2.sail ............................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
overload_overload.sail ................. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
floor_pow2.sail ........................ [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
funcl_guard.sail ....................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_subrange_pattern.sail ........... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
lexp_vec.sail .......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
implicits.sail ......................... [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_concat_assign.sail .............. [92mok[0m
Running 16 tests in parallel. Set TEST_PAR to configure
vector_append.sail ..................... [93mskip[0m
varity.sail ............................ [92mok[0m
repeat_constraint.sail ................. [92mok[0m
while_PM.sail .......................... [93mskip[0m
as_pattern.sail ........................ [92mok[0m
while_PP.sail .......................... [92mok[0m
while_PM.sail .......................... [93mskip[0m
atomcase.sail .......................... [92mok[0m
while_PM.sail .......................... [93mskip[0m
true_false.sail ........................ [92mok[0m
vec_pat1.sail .......................... [92mok[0m
wildcard_mapping.sail .................. [92mok[0m
equation_return.sail ................... [92mok[0m
nlflow.sail ............................ [92mok[0m
tuple_bitvector_int_pat.sail ........... [92mok[0m
while_PM.sail .......................... [93mskip[0m
vector_subrange_gen.sail ............... [92mok[0m
while_PM.sail .......................... [93mskip[0m
vec_length_inc.sail .................... [92mok[0m
while_PM.sail .......................... [93mskip[0m
existential_ast3.sail .................. [92mok[0m
while_PM.sail .......................... [93mskip[0m
existential_ast.sail ................... [92mok[0m
while_PM.sail .......................... [93mskip[0m
concurrency_interface_inc.sail ......... [93mskip[0m
extension_constructor.sail ............. [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
commentfix.sail ........................ [92mok[0m
add_real.sail .......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
exit2.sail ............................. [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_ctor.sail ................... [92mok[0m
return_simple4.sail .................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_syn.sail .................... [93mskip[0m
multiple_unifiers.sail ................. [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
arm_FPEXC1.sail ........................ [92mok[0m
sizeof_fixed.sail ...................... [92mok[0m
bool_mapping.sail ...................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
flow_lteq1.sail ........................ [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
tautology.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
Replicate.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
arm_types.sail ......................... [92mok[0m
concurrency_interface_inc.sail ......... [93mskip[0m
constraint_syn.sail .................... [93mskip[0m
execute_decode_hard.sail ............... [93mskip[0m
exit3.sail ............................. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
nzcv.sail .............................. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
pat_completeness.sail .................. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
poly_list.sail ......................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
bind_typ_var.sail ...................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
bool_bits_mapping.sail ................. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
bool_mapping2.sail ..................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
wf_specs.sail .......................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
overload_int_nat.sail .................. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
vector_pattern_split.sail .............. [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
custom_flow.sail ....................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
decode_patterns.sail ................... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
string_append_non_exec.sail ............ [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
struct_field_constraint.sail ........... [92mok[0m
execute_decode_hard.sail ............... [93mskip[0m
patternrefinement.sail ................. [93mskip[0m
ex_vector_infer.sail ................... [93mskip[0m
list_lit.sail .......................... [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
cons_pattern.sail ...................... [92mok[0m
list_cons2.sail ........................ [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
option_tuple.sail ...................... [92mok[0m
if_var_updates.sail .................... [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
complete_pattern_let.sail .............. [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
complex_exist_sat.sail ................. [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
return_simple1.sail .................... [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
tuple_assign.sail ...................... [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
allpats.sail ........................... [92mok[0m
short_circuit_bool_ex.sail ............. [92mok[0m
exist1.sail ............................ [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
vector_subrange_mapping.sail ........... [92mok[0m
type_if_then_else.sail ................. [92mok[0m
fpthreesimp.sail ....................... [92mok[0m
ex_vector_infer.sail ................... [93mskip[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
union_infer.sail ....................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
bitwise_not.sail ....................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
anon_rec.sail .......................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
mod_var.sail ........................... [92mok[0m
option_either.sail ..................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
procstate1.sail ........................ [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
nonexistent_pragma.sail ................ [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
reg_mod.sail ........................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
add_vec_lit.sail ....................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
global_type_var.sail ................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
set_constraint.sail .................... [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
type_div.sail .......................... [92mok[0m
bitfield_updates0.sail ................. [92mok[0m
pow_32_64.sail ......................... [93mskip[0m
simple_record_access.sail .............. [93mskip[0m
abstract_bool2.sail .................... [93mskip[0m
exist_true.sail ........................ [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
while_MP.sail .......................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
assignment_simple.sail ................. [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
case_simple2.sail ...................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
reg_list.sail .......................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
pure_let_var.sail ...................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
tuple_fun.sail ......................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
pure_let_var2.sail ..................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
poly_vector.sail ....................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
if_infer.sail .......................... [92mok[0m
mutrec.sail ............................ [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
flow_gteq1.sail ........................ [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
pow_unify.sail ......................... [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
equation_arguments.sail ................ [92mok[0m
exist_tlb.sail ......................... [93mskip[0m
abstract_bool.sail ..................... [93mskip[0m
bitfield_mod.sail ...................... [93mskip[0m
cons_pattern_synonym.sail .............. [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
overlap_field.sail ..................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
type_pow_zero.sail ..................... [93mskip[0m
inc_prelude.sail ....................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
bool_typ_pat.sail ...................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
phantom_bitlist_struct.sail ............ [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
pure_record2.sail ...................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
reg_option.sail ........................ [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
enum_map.sail .......................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
let_subtyp_bug.sail .................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
reg_ref.sail ........................... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
tuple_bitvector_int_pat2.sail .......... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
type_pow_zero.sail ..................... [93mskip[0m
mapping_clause.sail .................... [92mok[0m
tuple_bitvector_int_pat3.sail .......... [92mok[0m
bitfield_mod.sail ...................... [93mskip[0m
type_pow_zero.sail ..................... [93mskip[0m
bitfield_abs.sail ...................... [93mskip[0m
existential_constraint_synonym.sail .... [93mskip[0m
exit1.sail ............................. [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
issue250.sail .......................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
pure_record.sail ....................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
plus_one_unify.sail .................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
simple_scattered.sail .................. [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
string_literal_type.sail ............... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
dec_prelude.sail ....................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
rmem_rmemt_same.sail ................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
no_val_recur.sail ...................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
modify_type_chain.sail ................. [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
if_return.sail ......................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
int_synonym.sail ....................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
recursion.sail ......................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
unsigned_index.sail .................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
flow_gt1.sail .......................... [92mok[0m
existential_constraint_synonym.sail .... [93mskip[0m
ex_list_infer.sail ..................... [93mskip[0m
scattered_enum.sail .................... [92mok[0m
scattered_union_doc.sail ............... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
vector_append_gen.sail ................. [93mskip[0m
exist_subrange.sail .................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
vec_length.sail ........................ [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
single_enum.sail ....................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
nexp_synonym.sail ...................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
cast_simple.sail ....................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
eqn_inst.sail .......................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
return_simple2.sail .................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
vector_append_gen.sail ................. [93mskip[0m
shadow_let.sail ........................ [92mok[0m
bits_concat_pattern.sail ............... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
flow_lt1.sail .......................... [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
reg_32_64.sail ......................... [92mok[0m
if_type_if.sail ........................ [92mok[0m
ex_list_infer.sail ..................... [93mskip[0m
vector_append_gen.sail ................. [93mskip[0m
bitfield_exponential.sail .............. [93mskip[0m
zero_length_bv.sail .................... [93mskip[0m
lt_flow.sail ........................... [92mok[0m
ex_cast.sail ........................... [92mok[0m
crlf.sail .............................. [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
cast_lexp1.sail ........................ [92mok[0m
struct_pattern.sail .................... [92mok[0m
list_infer.sail ........................ [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
if_infer2.sail ......................... [92mok[0m
constrained_struct.sail ................ [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
tyvar_shadow.sail ...................... [92mok[0m
exist_simple.sail ...................... [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
mapping_rreg.sail ...................... [92mok[0m
bitvector_param.sail ................... [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
bitfield_updates.sail .................. [92mok[0m
bitfield_exponential.sail .............. [93mskip[0m
zero_length_bv.sail .................... [93mskip[0m
overload_plus.sail ..................... [93mskip[0m
single_union.sail ...................... [92mok[0m
bitwise_not_x3.sail .................... [92mok[0m
nat_set.sail ........................... [92mok[0m
case_simple1.sail ...................... [92mok[0m
return_simple3.sail .................... [92mok[0m
phantom_bitlist_union.sail ............. [92mok[0m
union_ctor_constraint.sail ............. [92mok[0m
zeros_implicit.sail .................... [92mok[0m
exint.sail ............................. [92mok[0m
foreach_var_updates.sail ............... [92mok[0m
guards.sail ............................ [92mok[0m
bool_constraint.sail ................... [92mok[0m
scattered_mapping_doc.sail ............. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
existential_ast2.sail .................. [92mok[0m
concurrency_interface_dec.sail ......... [93mskip[0m
negative_bits_list.sail ................ [93mskip[0m
add_vec_exts_no_annot_overload.sail .... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
phantom_num.sail ....................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
struct_pattern_partial.sail ............ [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
bitfield_pc.sail ....................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
outcome_impl.sail ...................... [92mok[0m
nexp_synonym2.sail ..................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
single_assign_in_block.sail ............ [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
try_while_try.sail ..................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
type_if_then_else_alt.sail ............. [92mok[0m
not_pattern.sail ....................... [92mok[0m
synth_ex_vs.sail ....................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
enum_cast.sail ......................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
inline_typ.sail ........................ [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
flow_lt2.sail .......................... [92mok[0m
tuple_type_cast.sail ................... [92mok[0m
negative_bits_list.sail ................ [93mskip[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
list_cons.sail ......................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
cast_lexp2.sail ........................ [92mok[0m
vector_access_dec.sail ................. [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
while_MM.sail .......................... [93mskip[0m
vector_access.sail ..................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
bv_simple_index_bit.sail ............... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
pure_record3.sail ...................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
priv_fn_no_val.sail .................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
outcome_impl_quant.sail ................ [92mok[0m
wf_register_type.sail .................. [93mskip[0m
modify_assignment1.sail ................ [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
issue434.sail .......................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
while_MM.sail .......................... [93mskip[0m
foreach_e.sail ......................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
bits_if.sail ........................... [92mok[0m
wf_register_type.sail .................. [93mskip[0m
phantom_option.sail .................... [93mskip[0m
while_MM.sail .......................... [93mskip[0m
[94m197 passes and 0 failures[0m

==========================================
Monomorphisation tests
==========================================
$SAIL is /home/trdthg/repo/sail/sail
tested assert expecting pass: [0;92mpass[0m
tested assert2 expecting pass: [0;92mpass[0m
tested assign_range expecting pass: [0;92mpass[0m
tested atomsplit expecting pass: [0;92mpass[0m
tested builtins expecting pass: [0;92mpass[0m
tested castreq expecting pass: [0;92mpass[0m
tested castrequnion expecting pass: [0;92mpass[0m
tested constprop expecting pass: [0;92mpass[0m
tested control_deps expecting pass: [0;92mpass[0m
tested exint expecting pass: [0;92mpass[0m
tested feature_no_effects expecting pass: [0;92mpass[0m
tested flow_extend expecting pass: [0;92mpass[0m
tested fsplitsign expecting pass: [0;92mpass[0m
tested itself_rewriting expecting pass: [0;92mpass[0m
tested letsplit expecting pass: [0;92mpass[0m
tested mapping expecting pass: [0;92mpass[0m
tested mutrecmono expecting pass: [0;92mpass[0m
tested nonlinearpat expecting pass: [0;92mpass[0m
tested parameterchoice expecting pass: [0;92mpass[0m
tested range expecting pass: [0;92mpass[0m
tested repeatedint expecting pass: [0;92mpass[0m
tested rewrites expecting pass: [0;92mpass[0m
tested set expecting pass: [0;92mpass[0m
tested set3 expecting pass: [0;92mpass[0m
tested splitreturn expecting pass: [0;92mpass[0m
tested structparam2 expecting pass: [0;92mpass[0m
tested time8_continue expecting pass: [0;92mpass[0m
tested times8 expecting pass: [0;92mpass[0m
tested times8div8 expecting pass: [0;92mpass[0m
tested tupledeps expecting pass: [0;92mpass[0m
tested tupledeps2 expecting pass: [0;92mpass[0m
tested union-exist expecting pass: [0;92mpass[0m
tested union-exist2 expecting pass: [0;92mpass[0m
tested union-exist_manual expecting pass: [0;92mpass[0m
tested union_split expecting pass: [0;92mpass[0m
tested varmatch expecting pass: [0;92mpass[0m
tested varmatch_manual expecting pass: [0;92mpass[0m
tested varpatterns expecting pass: [0;92mpass[0m
tested vector expecting pass: [0;92mpass[0m
tested vector_manual expecting pass: [0;92mpass[0m
tested vectorsize expecting pass: [0;92mpass[0m
monomorphisation tests: Passed 41 out of 41


==========================================
LaTeX tests
==========================================
./let.sail
./reference-type.sail
./reg.sail
./candperm.sail
./bitfield.sail
Generating LaTeX for bitfield.sail: [0;92mok[0m
Building LaTeX for bitfield.sail: [0;91mlatexmk not installed[0m
Files /tmp/tmp.m8JU8I5Fxy/out/commands.tex and candperm.commands.tex.exp differ
--- /tmp/tmp.m8JU8I5Fxy/out/commands.tex	2024-07-29 15:49:32.277277982 +0800
+++ candperm.commands.tex.exp	2024-07-26 09:11:18.863870876 +0800
@@ -9,30 +9,6 @@
 \providecommand\saildoclet[2]{#1 #2}
 \providecommand\saildocregister[2]{#1 #2}
 
-\newcommand{\sailvalinternalPick}{\saildoclabelled{sailzinternalzypick}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinternal_pick0eb5adfbcccbb1785fa494f00459100d.tex}}}}
-
-\newcommand{\sailvalundefinedBool}{\saildoclabelled{sailzundefinedzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bool243ac67bbc90a729a829b61aebdfb100.tex}}}}
-
-\newcommand{\sailvalundefinedBit}{\saildoclabelled{sailzundefinedzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitda1641f2d65bcfe8a6543bdf76182545.tex}}}}
-
-\newcommand{\sailvalundefinedInt}{\saildoclabelled{sailzundefinedzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_intd4ae6556082aadeaaedb4f74f01376ce.tex}}}}
-
-\newcommand{\sailvalundefinedNat}{\saildoclabelled{sailzundefinedzynat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_natd1f1df7de8df3f2d01791e80cbd35531.tex}}}}
-
-\newcommand{\sailvalundefinedReal}{\saildoclabelled{sailzundefinedzyreal}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_realc5ec14397a5a0720672cdd9ba3506589.tex}}}}
-
-\newcommand{\sailvalundefinedString}{\saildoclabelled{sailzundefinedzystring}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_stringe5c8a6af28b8ac03b9fd048eaa331eb8.tex}}}}
-
-\newcommand{\sailvalundefinedList}{\saildoclabelled{sailzundefinedzylist}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_list642d622904a8c0888aa4e72a844c6812.tex}}}}
-
-\newcommand{\sailvalundefinedRange}{\saildoclabelled{sailzundefinedzyrange}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_range78fb4a60a699f8333068f57d526860fa.tex}}}}
-
-\newcommand{\sailvalundefinedVector}{\saildoclabelled{sailzundefinedzyvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_vector7dcc506a79e97a89a0d66bc54b515466.tex}}}}
-
-\newcommand{\sailvalundefinedBitvector}{\saildoclabelled{sailzundefinedzybitvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitvectorc0153f961b53b1b17bf36adcf5409590.tex}}}}
-
-\newcommand{\sailvalundefinedUnit}{\saildoclabelled{sailzundefinedzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_unitd751910db26c6cf7ec5d02a503ad4f9e.tex}}}}
-
 \newcommand{\sailtypeast}{\saildoclabelled{sailtypezast}{\saildoctype{}{\lstinputlisting[language=sail]{out/typezast6bb070d12e82e4887160cdfd016230c8.tex}}}}
 
 \newcommand{\sailvalexecute}{\saildoclabelled{sailzexecute}{\saildocval{}{\lstinputlisting[language=sail]{out/valzexecute33a689e3a631b9b905b85461d3814943.tex}}}}
@@ -84,81 +60,22 @@
 \begin{itemize}
 \item \emph{cs1.tag} is not set.
 \item \emph{cs1} is sealed.
-
 \end{itemize}
 }{\lstinputlisting[language=sail]{out/fclCAndPermMarkdownWithExceptionszexecute33a689e3a631b9b905b85461d3814943.tex}}}}
 
 
 
-\newcommand{\sailvalinitializzeRegisters}{\saildoclabelled{sailzinitializzezyregisters}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
-\newcommand{\sailfninitializzeRegisters}{\saildoclabelled{sailfnzinitializzezyregisters}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
 \newcommand{\sailval}[1]{
-  \ifstrequal{#1}{execute}{\sailvalexecute}{}%
-  \ifstrequal{#1}{initialize_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{internal_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{internal\_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{undefined_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined\_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined\_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined\_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined\_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined\_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined\_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined\_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined\_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined\_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined_vector}{\sailvalundefinedVector}{}%
-  \ifstrequal{#1}{undefined\_vector}{\sailvalundefinedVector}{}}
+  \ifstrequal{#1}{execute}{\sailvalexecute}{}}
 
 \newcommand{\sailrefval}[2]{
-  \ifstrequal{#1}{execute}{\hyperref[sailzexecute]{#2}}{}%
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{internal_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{internal\_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{undefined_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined\_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined\_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined\_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined\_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined\_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined\_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}}
+  \ifstrequal{#1}{execute}{\hyperref[sailzexecute]{#2}}{}}
 
 \newcommand{\sailfn}[1]{
-  \ifstrequal{#1}{initialize_registers}{\sailfninitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailfninitializzeRegisters}{}}
+  }
 
 \newcommand{\sailreffn}[2]{
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}}
+  }
 
 \newcommand{\sailtype}[1]{
   \ifstrequal{#1}{ast}{\sailtypeast}{}}
Generating LaTeX for candperm.sail: [0;93moutput is different[0m
Building LaTeX for candperm.sail: [0;91mlatexmk not installed[0m
Files /tmp/tmp.LGX6FgtpCd/out/commands.tex and let.commands.tex.exp differ
--- /tmp/tmp.LGX6FgtpCd/out/commands.tex	2024-07-29 15:49:32.307277980 +0800
+++ let.commands.tex.exp	2024-07-26 09:11:18.863870876 +0800
@@ -9,101 +9,21 @@
 \providecommand\saildoclet[2]{#1 #2}
 \providecommand\saildocregister[2]{#1 #2}
 
-\newcommand{\sailvalinternalPick}{\saildoclabelled{sailzinternalzypick}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinternal_pick0eb5adfbcccbb1785fa494f00459100d.tex}}}}
-
-\newcommand{\sailvalundefinedBool}{\saildoclabelled{sailzundefinedzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bool243ac67bbc90a729a829b61aebdfb100.tex}}}}
-
-\newcommand{\sailvalundefinedBit}{\saildoclabelled{sailzundefinedzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitda1641f2d65bcfe8a6543bdf76182545.tex}}}}
-
-\newcommand{\sailvalundefinedInt}{\saildoclabelled{sailzundefinedzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_intd4ae6556082aadeaaedb4f74f01376ce.tex}}}}
-
-\newcommand{\sailvalundefinedNat}{\saildoclabelled{sailzundefinedzynat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_natd1f1df7de8df3f2d01791e80cbd35531.tex}}}}
-
-\newcommand{\sailvalundefinedReal}{\saildoclabelled{sailzundefinedzyreal}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_realc5ec14397a5a0720672cdd9ba3506589.tex}}}}
-
-\newcommand{\sailvalundefinedString}{\saildoclabelled{sailzundefinedzystring}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_stringe5c8a6af28b8ac03b9fd048eaa331eb8.tex}}}}
-
-\newcommand{\sailvalundefinedList}{\saildoclabelled{sailzundefinedzylist}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_list642d622904a8c0888aa4e72a844c6812.tex}}}}
-
-\newcommand{\sailvalundefinedRange}{\saildoclabelled{sailzundefinedzyrange}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_range78fb4a60a699f8333068f57d526860fa.tex}}}}
-
-\newcommand{\sailvalundefinedVector}{\saildoclabelled{sailzundefinedzyvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_vector7dcc506a79e97a89a0d66bc54b515466.tex}}}}
-
-\newcommand{\sailvalundefinedBitvector}{\saildoclabelled{sailzundefinedzybitvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitvectorc0153f961b53b1b17bf36adcf5409590.tex}}}}
-
-\newcommand{\sailvalundefinedUnit}{\saildoclabelled{sailzundefinedzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_unitd751910db26c6cf7ec5d02a503ad4f9e.tex}}}}
-
 \newcommand{\sailletfive}{\saildoclabelled{sailletzfive}{\saildoclet{}{\lstinputlisting[language=sail]{out/letzfivecd794ea050dab71d846e756689b83a36.tex}}}}
 
 \newcommand{\sailletseven}{\saildoclabelled{sailletzseven}{\saildoclet{}{\lstinputlisting[language=sail]{out/letzseven4931f12072db48c84b4f78b84a6a1b73.tex}}}}
 
-\newcommand{\sailvalinitializzeRegisters}{\saildoclabelled{sailzinitializzezyregisters}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
-\newcommand{\sailfninitializzeRegisters}{\saildoclabelled{sailfnzinitializzezyregisters}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
 \newcommand{\sailval}[1]{
-  \ifstrequal{#1}{initialize_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{internal_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{internal\_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{undefined_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined\_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined\_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined\_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined\_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined\_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined\_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined\_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined\_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined\_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined_vector}{\sailvalundefinedVector}{}%
-  \ifstrequal{#1}{undefined\_vector}{\sailvalundefinedVector}{}}
+  }
 
 \newcommand{\sailrefval}[2]{
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{internal_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{internal\_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{undefined_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined\_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined\_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined\_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined\_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined\_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined\_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}}
+  }
 
 \newcommand{\sailfn}[1]{
-  \ifstrequal{#1}{initialize_registers}{\sailfninitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailfninitializzeRegisters}{}}
+  }
 
 \newcommand{\sailreffn}[2]{
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}}
+  }
 
 \newcommand{\sailtype}[1]{
   }
Generating LaTeX for let.sail: [0;93moutput is different[0m
Building LaTeX for let.sail: [0;91mlatexmk not installed[0m
Files /tmp/tmp.DbfiHehxjm/out/commands.tex and reference-type.commands.tex.exp differ
--- /tmp/tmp.DbfiHehxjm/out/commands.tex	2024-07-29 15:49:32.397277975 +0800
+++ reference-type.commands.tex.exp	2024-07-26 09:11:18.863870876 +0800
@@ -9,30 +9,6 @@
 \providecommand\saildoclet[2]{#1 #2}
 \providecommand\saildocregister[2]{#1 #2}
 
-\newcommand{\sailvalinternalPick}{\saildoclabelled{sailzinternalzypick}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinternal_pick0eb5adfbcccbb1785fa494f00459100d.tex}}}}
-
-\newcommand{\sailvalundefinedBool}{\saildoclabelled{sailzundefinedzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bool243ac67bbc90a729a829b61aebdfb100.tex}}}}
-
-\newcommand{\sailvalundefinedBit}{\saildoclabelled{sailzundefinedzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitda1641f2d65bcfe8a6543bdf76182545.tex}}}}
-
-\newcommand{\sailvalundefinedInt}{\saildoclabelled{sailzundefinedzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_intd4ae6556082aadeaaedb4f74f01376ce.tex}}}}
-
-\newcommand{\sailvalundefinedNat}{\saildoclabelled{sailzundefinedzynat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_natd1f1df7de8df3f2d01791e80cbd35531.tex}}}}
-
-\newcommand{\sailvalundefinedReal}{\saildoclabelled{sailzundefinedzyreal}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_realc5ec14397a5a0720672cdd9ba3506589.tex}}}}
-
-\newcommand{\sailvalundefinedString}{\saildoclabelled{sailzundefinedzystring}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_stringe5c8a6af28b8ac03b9fd048eaa331eb8.tex}}}}
-
-\newcommand{\sailvalundefinedList}{\saildoclabelled{sailzundefinedzylist}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_list642d622904a8c0888aa4e72a844c6812.tex}}}}
-
-\newcommand{\sailvalundefinedRange}{\saildoclabelled{sailzundefinedzyrange}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_range78fb4a60a699f8333068f57d526860fa.tex}}}}
-
-\newcommand{\sailvalundefinedVector}{\saildoclabelled{sailzundefinedzyvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_vector7dcc506a79e97a89a0d66bc54b515466.tex}}}}
-
-\newcommand{\sailvalundefinedBitvector}{\saildoclabelled{sailzundefinedzybitvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitvectorc0153f961b53b1b17bf36adcf5409590.tex}}}}
-
-\newcommand{\sailvalundefinedUnit}{\saildoclabelled{sailzundefinedzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_unitd751910db26c6cf7ec5d02a503ad4f9e.tex}}}}
-
 \newcommand{\sailvaleqUnit}{\saildoclabelled{sailzeqzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_unit996f84433ac0995f4aadfca5b68cd358.tex}}}}
 
 \newcommand{\sailvaleqBit}{\saildoclabelled{sailzeqzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_bit7182cc37406e2c0d4c1e739a98e248ea.tex}}}}
@@ -67,27 +43,27 @@
 
 \newcommand{\sailvalgtInt}{\saildoclabelled{sailzgtzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzgt_intef94a8c66f39b1f715cb72941ed95921.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}
+\newcommand{\sailoverloadBzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadBzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozOnezJzNine}{\saildoclabelled{sailoverloadAzz8operatorz0z1zJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0z1zjz981ebe433e26f9e2dfa2a9d2c7f4fe1f4.tex}}}}
+\newcommand{\sailoverloadCzEightoperatorzZerozOnezJzNine}{\saildoclabelled{sailoverloadCzz8operatorz0z1zJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadCzz8operatorz0z1zjz981ebe433e26f9e2dfa2a9d2c7f4fe1f4.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozUzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zUz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zuz99af95b281314726fa91893b57fc290dc.tex}}}}
+\newcommand{\sailoverloadDzEightoperatorzZerozUzNine}{\saildoclabelled{sailoverloadDzz8operatorz0zUz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadDzz8operatorz0zuz99af95b281314726fa91893b57fc290dc.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozSixzNine}{\saildoclabelled{sailoverloadAzz8operatorz0z6z9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0z6z9d3731bb9b1c9d765858778ad48ba6b3a.tex}}}}
+\newcommand{\sailoverloadEzEightoperatorzZerozSixzNine}{\saildoclabelled{sailoverloadEzz8operatorz0z6z9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadEzz8operatorz0z6z9d3731bb9b1c9d765858778ad48ba6b3a.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozIzJzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zIzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zizjz95c366628fed7d8b7c251f1acd527ee3b.tex}}}}
+\newcommand{\sailoverloadFzEightoperatorzZerozIzJzNine}{\saildoclabelled{sailoverloadFzz8operatorz0zIzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadFzz8operatorz0zizjz95c366628fed7d8b7c251f1acd527ee3b.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozIzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zIz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0ziz9714b8c400aed24ebd80eac39b4f9d751.tex}}}}
+\newcommand{\sailoverloadGzEightoperatorzZerozIzNine}{\saildoclabelled{sailoverloadGzz8operatorz0zIz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadGzz8operatorz0ziz9714b8c400aed24ebd80eac39b4f9d751.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozKzJzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zKzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zkzjz94161e4bfad2d20e5d25bc774612b6588.tex}}}}
+\newcommand{\sailoverloadHzEightoperatorzZerozKzJzNine}{\saildoclabelled{sailoverloadHzz8operatorz0zKzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadHzz8operatorz0zkzjz94161e4bfad2d20e5d25bc774612b6588.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozKzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zKz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zkz93747e4d4a6f99eb3fca0b477d2437ed5.tex}}}}
+\newcommand{\sailoverloadIzEightoperatorzZerozKzNine}{\saildoclabelled{sailoverloadIzz8operatorz0zKz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadIzz8operatorz0zkz93747e4d4a6f99eb3fca0b477d2437ed5.tex}}}}
 
 \newcommand{\sailvalId}{\saildoclabelled{sailzzyzyid}{\saildocval{}{\lstinputlisting[language=sail]{out/valz__ided888b8991a27578d5dd72f84db80bce.tex}}}}
 
 \newcommand{\sailfnId}{\saildoclabelled{sailfnzzyzyid}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnz__ided888b8991a27578d5dd72f84db80bce.tex}}}}
 
-\newcommand{\sailoverloadASizze}{\saildoclabelled{sailoverloadAzzyzysizze}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAz__sizze5b2e36a5dbb42eaba80b4d164e45d3ae.tex}}}}
+\newcommand{\sailoverloadJSizze}{\saildoclabelled{sailoverloadJzzyzysizze}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadJz__sizze5b2e36a5dbb42eaba80b4d164e45d3ae.tex}}}}
 
 \newcommand{\sailvalDeref}{\saildoclabelled{sailzzyzyderef}{\saildocval{}{\lstinputlisting[language=sail]{out/valz__deref1dbc379e24bd1b182e1db755dea8c453.tex}}}}
 
@@ -95,21 +71,19 @@
 
 \newcommand{\sailvaleqBits}{\saildoclabelled{sailzeqzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzeq_bits886ce7cf3ec93a28308e8d4e9d63f4be.tex}}}}
 
-\newcommand{\sailoverloadBzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadBzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}
+\newcommand{\sailoverloadKzEightoperatorzZerozJzJzNine}{\saildoclabelled{sailoverloadKzz8operatorz0zJzJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadKzz8operatorz0zjzjz9c650f45e06411dd4e97578ff2bad6338.tex}}}}
 
 \newcommand{\sailvalneqBits}{\saildoclabelled{sailzneqzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzneq_bits167748c906c068e62596c88540a84f42.tex}}}}
 
 \newcommand{\sailfnneqBits}{\saildoclabelled{sailfnzneqzybits}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzneq_bits167748c906c068e62596c88540a84f42.tex}}}}
 
-\newcommand{\sailoverloadBzEightoperatorzZerozOnezJzNine}{\saildoclabelled{sailoverloadBzz8operatorz0z1zJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0z1zjz981ebe433e26f9e2dfa2a9d2c7f4fe1f4.tex}}}}
+\newcommand{\sailoverloadLzEightoperatorzZerozOnezJzNine}{\saildoclabelled{sailoverloadLzz8operatorz0z1zJz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadLzz8operatorz0z1zjz981ebe433e26f9e2dfa2a9d2c7f4fe1f4.tex}}}}
 
 \newcommand{\sailvalbitvectorLength}{\saildoclabelled{sailzbitvectorzylength}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_lengthcd74a5cced7567d19500671e4b6e1031.tex}}}}
 
 \newcommand{\sailvalvectorLength}{\saildoclabelled{sailzvectorzylength}{\saildocval{}{\lstinputlisting[language=sail]{out/valzvector_length9ee541b308cdfd9738d44bfb3dff4b46.tex}}}}
 
-\newcommand{\sailvalvectorInit}{\saildoclabelled{sailzvectorzyinit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzvector_inita510fd0ead8056bd52754fbb56c09b98.tex}}}}
-
-\newcommand{\sailoverloadAlength}{\saildoclabelled{sailoverloadAzlength}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzlength469e3f917f7b24f4691faf3caf842eba.tex}}}}
+\newcommand{\sailoverloadMlength}{\saildoclabelled{sailoverloadMzlength}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadMzlength469e3f917f7b24f4691faf3caf842eba.tex}}}}
 
 \newcommand{\sailvalcountLeadingZeros}{\saildoclabelled{sailzcountzyleadingzyzzeros}{\saildocval{}{\lstinputlisting[language=sail]{out/valzcount_leading_zzeros315ae28f559df1d42a7d2ca4cfff2905.tex}}}}
 
@@ -121,11 +95,11 @@
 
 \newcommand{\sailvalsailZeroExtend}{\saildoclabelled{sailzsailzyzzerozyextend}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsail_zzero_extend411875c18d3b332113845d17151890c2.tex}}}}
 
-\newcommand{\sailvaltruncate}{\saildoclabelled{sailztruncate}{\saildocval{\lstinline{sail_zero_extend}\lstinline`(v, n)` truncates \lstinline`v`, keeping only the \emph{least} significant \lstinline`n` bits.
+\newcommand{\sailvaltruncate}{\saildoclabelled{sailztruncate}{\saildocval{\lstinline{truncate}\lstinline`(v, n)` truncates \lstinline`v`, keeping only the \emph{least} significant \lstinline`n` bits.
 
 }{\lstinputlisting[language=sail]{out/valztruncatea666e28ae0c8ca7327a2b3fcd1ed4ec7.tex}}}}
 
-\newcommand{\sailvaltruncateLSB}{\saildoclabelled{sailztruncateLSB}{\saildocval{\lstinline{truncate}\lstinline`(v, n)` truncates \lstinline`v`, keeping only the \emph{most} significant \lstinline`n` bits.
+\newcommand{\sailvaltruncateLSB}{\saildoclabelled{sailztruncateLSB}{\saildocval{\lstinline{truncateLSB}\lstinline`(v, n)` truncates \lstinline`v`, keeping only the \emph{most} significant \lstinline`n` bits.
 
 }{\lstinputlisting[language=sail]{out/valztruncatelsb4d124c6ec672453343dc0b20d295e82d.tex}}}}
 
@@ -133,11 +107,11 @@
 
 \newcommand{\sailfnsailMask}{\saildoclabelled{sailfnzsailzymask}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzsail_maske146b73afc824e90813dd8234bfa3053.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozQzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zQz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zqz9ccbd65071d8f0fbb9677c7f6e86d3527.tex}}}}
+\newcommand{\sailoverloadNzEightoperatorzZerozQzNine}{\saildoclabelled{sailoverloadNzz8operatorz0zQz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadNzz8operatorz0zqz9ccbd65071d8f0fbb9677c7f6e86d3527.tex}}}}
 
 \newcommand{\sailvalbitvectorConcat}{\saildoclabelled{sailzbitvectorzyconcat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_concat6176f8be1468d8779ee8370fd3b4a6e0.tex}}}}
 
-\newcommand{\sailoverloadAappend}{\saildoclabelled{sailoverloadAzappend}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzappend88575169e0ec1639b6ae3851df999710.tex}}}}
+\newcommand{\sailoverloadOappend}{\saildoclabelled{sailoverloadOzappend}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadOzappend88575169e0ec1639b6ae3851df999710.tex}}}}
 
 \newcommand{\sailvalappendSixFour}{\saildoclabelled{sailzappendzy64}{\saildocval{}{\lstinputlisting[language=sail]{out/valzappend_6433ef192058d4bf5f092d6f8b6d97f4c4.tex}}}}
 
@@ -145,19 +119,19 @@
 
 \newcommand{\sailvalplainVectorAccess}{\saildoclabelled{sailzplainzyvectorzyaccess}{\saildocval{}{\lstinputlisting[language=sail]{out/valzplain_vector_access792547dd734d4ff2e6078cbb88967469.tex}}}}
 
-\newcommand{\sailoverloadAvectorAccess}{\saildoclabelled{sailoverloadAzvectorzyaccess}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzvector_accessbe81ec250d2df2ebadde393ea37a85a4.tex}}}}
+\newcommand{\sailoverloadPvectorAccess}{\saildoclabelled{sailoverloadPzvectorzyaccess}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadPzvector_accessbe81ec250d2df2ebadde393ea37a85a4.tex}}}}
 
 \newcommand{\sailvalbitvectorUpdate}{\saildoclabelled{sailzbitvectorzyupdate}{\saildocval{}{\lstinputlisting[language=sail]{out/valzbitvector_update20826799a1ff3ff40895206db0df14bb.tex}}}}
 
 \newcommand{\sailvalplainVectorUpdate}{\saildoclabelled{sailzplainzyvectorzyupdate}{\saildocval{}{\lstinputlisting[language=sail]{out/valzplain_vector_updateb31d67bfe51b1a6f79983347dfc57da0.tex}}}}
 
-\newcommand{\sailoverloadAvectorUpdate}{\saildoclabelled{sailoverloadAzvectorzyupdate}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzvector_updateb14d5207ae01ed7fc9d9882c9cc3ebef.tex}}}}
+\newcommand{\sailoverloadQvectorUpdate}{\saildoclabelled{sailoverloadQzvectorzyupdate}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadQzvector_updateb14d5207ae01ed7fc9d9882c9cc3ebef.tex}}}}
 
 \newcommand{\sailvaladdBits}{\saildoclabelled{sailzaddzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_bits24373ffc11f289d5bb648df2f4f41b25.tex}}}}
 
 \newcommand{\sailvaladdBitsInt}{\saildoclabelled{sailzaddzybitszyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzadd_bits_inta5424052402522ff4653275c899f7543.tex}}}}
 
-\newcommand{\sailoverloadAzEightoperatorzZerozBzNine}{\saildoclabelled{sailoverloadAzz8operatorz0zBz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzz8operatorz0zbz9a2d0168f574b152e5f31357e86602c16.tex}}}}
+\newcommand{\sailoverloadRzEightoperatorzZerozBzNine}{\saildoclabelled{sailoverloadRzz8operatorz0zBz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadRzz8operatorz0zbz9a2d0168f574b152e5f31357e86602c16.tex}}}}
 
 \newcommand{\sailvalsubBits}{\saildoclabelled{sailzsubzybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsub_bitsf0dc4fc3429d45517c523db21af72127.tex}}}}
 
@@ -165,21 +139,21 @@
 
 \newcommand{\sailvalandVec}{\saildoclabelled{sailzandzyvec}{\saildocval{}{\lstinputlisting[language=sail]{out/valzand_vec99be3fe45d23194b597520c9e407ad35.tex}}}}
 
-\newcommand{\sailoverloadBzEightoperatorzZerozSixzNine}{\saildoclabelled{sailoverloadBzz8operatorz0z6z9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0z6z9d3731bb9b1c9d765858778ad48ba6b3a.tex}}}}
+\newcommand{\sailoverloadSzEightoperatorzZerozSixzNine}{\saildoclabelled{sailoverloadSzz8operatorz0z6z9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadSzz8operatorz0z6z9d3731bb9b1c9d765858778ad48ba6b3a.tex}}}}
 
 \newcommand{\sailvalorVec}{\saildoclabelled{sailzorzyvec}{\saildocval{}{\lstinputlisting[language=sail]{out/valzor_vec467c7a3f74be27085fe1b2aa3651ffe7.tex}}}}
 
-\newcommand{\sailoverloadBzEightoperatorzZerozUzNine}{\saildoclabelled{sailoverloadBzz8operatorz0zUz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBzz8operatorz0zuz99af95b281314726fa91893b57fc290dc.tex}}}}
+\newcommand{\sailoverloadTzEightoperatorzZerozUzNine}{\saildoclabelled{sailoverloadTzz8operatorz0zUz9}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadTzz8operatorz0zuz99af95b281314726fa91893b57fc290dc.tex}}}}
 
 \newcommand{\sailvalxorVec}{\saildoclabelled{sailzxorzyvec}{\saildocval{}{\lstinputlisting[language=sail]{out/valzxor_vecdacd54acc32f073fb01d1c188177bc8c.tex}}}}
 
 \newcommand{\sailvalsubrangeBits}{\saildoclabelled{sailzsubrangezybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsubrange_bits6c497c14df4f4754bd345a6c56ca2aad.tex}}}}
 
-\newcommand{\sailoverloadAvectorSubrange}{\saildoclabelled{sailoverloadAzvectorzysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzvector_subrange270c799ffa6c20b5244f22c64fba0367.tex}}}}
+\newcommand{\sailoverloadUvectorSubrange}{\saildoclabelled{sailoverloadUzvectorzysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadUzvector_subrange270c799ffa6c20b5244f22c64fba0367.tex}}}}
 
 \newcommand{\sailvalupdateSubrangeBits}{\saildoclabelled{sailzupdatezysubrangezybits}{\saildocval{}{\lstinputlisting[language=sail]{out/valzupdate_subrange_bitsb5ffe862b26310b45a779cd45bbf041e.tex}}}}
 
-\newcommand{\sailoverloadAvectorUpdateSubrange}{\saildoclabelled{sailoverloadAzvectorzyupdatezysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadAzvector_update_subrangeb77be803268d55f5f112399f9d0dfbc2.tex}}}}
+\newcommand{\sailoverloadVvectorUpdateSubrange}{\saildoclabelled{sailoverloadVzvectorzyupdatezysubrange}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadVzvector_update_subrangeb77be803268d55f5f112399f9d0dfbc2.tex}}}}
 
 \newcommand{\sailvalsailShiftleft}{\saildoclabelled{sailzsailzyshiftleft}{\saildocval{}{\lstinputlisting[language=sail]{out/valzsail_shiftlefta7bc10407d10355c4e981688c9926084.tex}}}}
 
@@ -215,22 +189,13 @@
 
 }{\lstinputlisting[language=sail]{out/valzsigned36d2317f34f1dacb4e465e6e56b185e6.tex}}}}
 
-\newcommand{\sailoverloadBSizze}{\saildoclabelled{sailoverloadBzzyzysizze}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadBz__sizze5b2e36a5dbb42eaba80b4d164e45d3ae.tex}}}}
+\newcommand{\sailoverloadWSizze}{\saildoclabelled{sailoverloadWzzyzysizze}{\saildocoverload{}{\lstinputlisting[language=sail]{out/overloadWz__sizze5b2e36a5dbb42eaba80b4d164e45d3ae.tex}}}}
 
 \newcommand{\sailtypecapUpermsWidth}{\saildoclabelled{sailtypezcapzyupermszywidth}{\saildoctype{}{\lstinputlisting[language=sail]{out/typezcap_uperms_widthf6dfed0942499b0c2d58b90971faca40.tex}}}}
 
 \newcommand{\sailletcapUpermsWidth}{\saildoclabelled{sailletzcapzyupermszywidth}{\saildoclet{}{\lstinputlisting[language=sail]{out/letzcap_uperms_widthf6dfed0942499b0c2d58b90971faca40.tex}}}}
 
-\newcommand{\sailvalmain}{\saildoclabelled{sailzmain}{\saildocval{\begin{itemize}
-\item Ref to \hyperref[sailzcapzyupermszywidth]{\lstinline{cap_uperms_width}}
-\item Ref to \hyperref[sailzcapzyupermszywidth]{description}
-\item Ref to \hyperref[sailztypez0capzyupermszywidth]{type description}
-\item Ref to % FIXME: this should be using type\_description \hyperref[sailztypezycapzyupermszywidth]{type_description}
-\item Ref to \sailreftype{cap\_uperms\_width}{uperms\_width}
-\item Ref to \sailreftype{cap\_uperms\_width}{uperms\_width}
-
-\end{itemize}
-}{\lstinputlisting[language=sail]{out/valzmaine3ee21bf8f1dbb3fd716a5a1803d7e24.tex}}}}
+\newcommand{\sailvalmain}{\saildoclabelled{sailzmain}{\saildocval{}{\lstinputlisting[language=sail]{out/valzmaine3ee21bf8f1dbb3fd716a5a1803d7e24.tex}}}}
 
 \newcommand{\sailfnmain}{\saildoclabelled{sailfnzmain}{\saildocfn{\begin{itemize}
 \item Ref to \hyperref[sailzcapzyupermszywidth]{\lstinline{cap_uperms_width}}
@@ -239,20 +204,10 @@
 \item Ref to % FIXME: this should be using type\_description \hyperref[sailztypezycapzyupermszywidth]{type_description}
 \item Ref to \sailreftype{cap\_uperms\_width}{uperms\_width}
 \item Ref to \sailreftype{cap\_uperms\_width}{uperms\_width}
-
 \end{itemize}
 }{\lstinputlisting[language=sail]{out/fnzmaine3ee21bf8f1dbb3fd716a5a1803d7e24.tex}}}}
 
-\newcommand{\sailvalfunctionWithUnderscores}{\saildoclabelled{sailzfunctionzywithzyunderscores}{\saildocval{\begin{itemize}
-\item \hyperref[sailzmain]{\lstinline{main}}
-\item \hyperref[sailzmain]{\lstinline{main}}
-\item \hyperref[sailzNOTz0main]{main}
-\item \hyperref[sailzNOTz0\lstinline{main}]{\lstinline{main}}
-\item \hyperref[sailzmain]{NOT main}
-\item \hyperref[sailzmain]{NOT \lstinline{main}}
-
-\end{itemize}
-}{\lstinputlisting[language=sail]{out/valzfunction_with_underscores6e195bff96b3fe3d60b356f28519989f.tex}}}}
+\newcommand{\sailvalfunctionWithUnderscores}{\saildoclabelled{sailzfunctionzywithzyunderscores}{\saildocval{}{\lstinputlisting[language=sail]{out/valzfunction_with_underscores6e195bff96b3fe3d60b356f28519989f.tex}}}}
 
 \newcommand{\sailfnfunctionWithUnderscores}{\saildoclabelled{sailfnzfunctionzywithzyunderscores}{\saildocfn{\begin{itemize}
 \item \hyperref[sailzfunction\_with\_underscores]{\lstinline{function\_with\_underscores}}
@@ -261,14 +216,9 @@
 \item \hyperref[sailzNOTz0\lstinline{function_with_underscores}]{\lstinline{function_with_underscores}}
 \item \hyperref[sailzfunction\_with\_underscores]{NOT function\_with\_underscores}
 \item \hyperref[sailzfunctionzywithzyunderscores]{NOT \lstinline{function_with_underscores}}
-
 \end{itemize}
 }{\lstinputlisting[language=sail]{out/fnzfunction_with_underscores6e195bff96b3fe3d60b356f28519989f.tex}}}}
 
-\newcommand{\sailvalinitializzeRegisters}{\saildoclabelled{sailzinitializzezyregisters}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
-\newcommand{\sailfninitializzeRegisters}{\saildoclabelled{sailfnzinitializzezyregisters}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
 \newcommand{\sailval}[1]{
   \ifstrequal{#1}{__deref}{\sailvalDeref}{}%
   \ifstrequal{#1}{\_\_deref}{\sailvalDeref}{}%
@@ -314,10 +264,6 @@
   \ifstrequal{#1}{gt\_int}{\sailvalgtInt}{}%
   \ifstrequal{#1}{gteq_int}{\sailvalgteqInt}{}%
   \ifstrequal{#1}{gteq\_int}{\sailvalgteqInt}{}%
-  \ifstrequal{#1}{initialize_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{internal_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{internal\_pick}{\sailvalinternalPick}{}%
   \ifstrequal{#1}{lt_int}{\sailvalltInt}{}%
   \ifstrequal{#1}{lt\_int}{\sailvalltInt}{}%
   \ifstrequal{#1}{lteq_int}{\sailvallteqInt}{}%
@@ -377,33 +323,9 @@
   \ifstrequal{#1}{subrange\_bits}{\sailvalsubrangeBits}{}%
   \ifstrequal{#1}{truncate}{\sailvaltruncate}{}%
   \ifstrequal{#1}{truncateLSB}{\sailvaltruncateLSB}{}%
-  \ifstrequal{#1}{undefined_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined\_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined\_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined\_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined\_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined\_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined\_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined\_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined\_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined\_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined_vector}{\sailvalundefinedVector}{}%
-  \ifstrequal{#1}{undefined\_vector}{\sailvalundefinedVector}{}%
   \ifstrequal{#1}{unsigned}{\sailvalunsigned}{}%
   \ifstrequal{#1}{update_subrange_bits}{\sailvalupdateSubrangeBits}{}%
   \ifstrequal{#1}{update\_subrange\_bits}{\sailvalupdateSubrangeBits}{}%
-  \ifstrequal{#1}{vector_init}{\sailvalvectorInit}{}%
-  \ifstrequal{#1}{vector\_init}{\sailvalvectorInit}{}%
   \ifstrequal{#1}{vector_length}{\sailvalvectorLength}{}%
   \ifstrequal{#1}{vector\_length}{\sailvalvectorLength}{}%
   \ifstrequal{#1}{xor_vec}{\sailvalxorVec}{}%
@@ -454,10 +376,6 @@
   \ifstrequal{#1}{gt\_int}{\hyperref[sailzgtzyint]{#2}}{}%
   \ifstrequal{#1}{gteq_int}{\hyperref[sailzgteqzyint]{#2}}{}%
   \ifstrequal{#1}{gteq\_int}{\hyperref[sailzgteqzyint]{#2}}{}%
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{internal_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{internal\_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
   \ifstrequal{#1}{lt_int}{\hyperref[sailzltzyint]{#2}}{}%
   \ifstrequal{#1}{lt\_int}{\hyperref[sailzltzyint]{#2}}{}%
   \ifstrequal{#1}{lteq_int}{\hyperref[sailzlteqzyint]{#2}}{}%
@@ -517,33 +435,9 @@
   \ifstrequal{#1}{subrange\_bits}{\hyperref[sailzsubrangezybits]{#2}}{}%
   \ifstrequal{#1}{truncate}{\hyperref[sailztruncate]{#2}}{}%
   \ifstrequal{#1}{truncateLSB}{\hyperref[sailztruncateLSB]{#2}}{}%
-  \ifstrequal{#1}{undefined_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined\_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined\_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined\_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined\_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined\_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined\_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}%
   \ifstrequal{#1}{unsigned}{\hyperref[sailzunsigned]{#2}}{}%
   \ifstrequal{#1}{update_subrange_bits}{\hyperref[sailzupdatezysubrangezybits]{#2}}{}%
   \ifstrequal{#1}{update\_subrange\_bits}{\hyperref[sailzupdatezysubrangezybits]{#2}}{}%
-  \ifstrequal{#1}{vector_init}{\hyperref[sailzvectorzyinit]{#2}}{}%
-  \ifstrequal{#1}{vector\_init}{\hyperref[sailzvectorzyinit]{#2}}{}%
   \ifstrequal{#1}{vector_length}{\hyperref[sailzvectorzylength]{#2}}{}%
   \ifstrequal{#1}{vector\_length}{\hyperref[sailzvectorzylength]{#2}}{}%
   \ifstrequal{#1}{xor_vec}{\hyperref[sailzxorzyvec]{#2}}{}%
@@ -556,8 +450,6 @@
   \ifstrequal{#1}{eq\_unit}{\sailfneqUnit}{}%
   \ifstrequal{#1}{function_with_underscores}{\sailfnfunctionWithUnderscores}{}%
   \ifstrequal{#1}{function\_with\_underscores}{\sailfnfunctionWithUnderscores}{}%
-  \ifstrequal{#1}{initialize_registers}{\sailfninitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailfninitializzeRegisters}{}%
   \ifstrequal{#1}{main}{\sailfnmain}{}%
   \ifstrequal{#1}{neq_bits}{\sailfnneqBits}{}%
   \ifstrequal{#1}{neq\_bits}{\sailfnneqBits}{}%
@@ -579,8 +471,6 @@
   \ifstrequal{#1}{eq\_unit}{\hyperref[sailfnzeqzyunit]{#2}}{}%
   \ifstrequal{#1}{function_with_underscores}{\hyperref[sailfnzfunctionzywithzyunderscores]{#2}}{}%
   \ifstrequal{#1}{function\_with\_underscores}{\hyperref[sailfnzfunctionzywithzyunderscores]{#2}}{}%
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}%
   \ifstrequal{#1}{main}{\hyperref[sailfnzmain]{#2}}{}%
   \ifstrequal{#1}{neq_bits}{\hyperref[sailfnzneqzybits]{#2}}{}%
   \ifstrequal{#1}{neq\_bits}{\hyperref[sailfnzneqzybits]{#2}}{}%
Generating LaTeX for reference-type.sail: [0;93moutput is different[0m
Building LaTeX for reference-type.sail: [0;91mlatexmk not installed[0m
Files /tmp/tmp.TVbNa7qJdt/out/commands.tex and reg.commands.tex.exp differ
--- /tmp/tmp.TVbNa7qJdt/out/commands.tex	2024-07-29 15:49:32.427277970 +0800
+++ reg.commands.tex.exp	2024-07-26 09:11:18.863870876 +0800
@@ -9,101 +9,21 @@
 \providecommand\saildoclet[2]{#1 #2}
 \providecommand\saildocregister[2]{#1 #2}
 
-\newcommand{\sailvalinternalPick}{\saildoclabelled{sailzinternalzypick}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinternal_pick0eb5adfbcccbb1785fa494f00459100d.tex}}}}
-
-\newcommand{\sailvalundefinedBool}{\saildoclabelled{sailzundefinedzybool}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bool243ac67bbc90a729a829b61aebdfb100.tex}}}}
-
-\newcommand{\sailvalundefinedBit}{\saildoclabelled{sailzundefinedzybit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitda1641f2d65bcfe8a6543bdf76182545.tex}}}}
-
-\newcommand{\sailvalundefinedInt}{\saildoclabelled{sailzundefinedzyint}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_intd4ae6556082aadeaaedb4f74f01376ce.tex}}}}
-
-\newcommand{\sailvalundefinedNat}{\saildoclabelled{sailzundefinedzynat}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_natd1f1df7de8df3f2d01791e80cbd35531.tex}}}}
-
-\newcommand{\sailvalundefinedReal}{\saildoclabelled{sailzundefinedzyreal}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_realc5ec14397a5a0720672cdd9ba3506589.tex}}}}
-
-\newcommand{\sailvalundefinedString}{\saildoclabelled{sailzundefinedzystring}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_stringe5c8a6af28b8ac03b9fd048eaa331eb8.tex}}}}
-
-\newcommand{\sailvalundefinedList}{\saildoclabelled{sailzundefinedzylist}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_list642d622904a8c0888aa4e72a844c6812.tex}}}}
-
-\newcommand{\sailvalundefinedRange}{\saildoclabelled{sailzundefinedzyrange}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_range78fb4a60a699f8333068f57d526860fa.tex}}}}
-
-\newcommand{\sailvalundefinedVector}{\saildoclabelled{sailzundefinedzyvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_vector7dcc506a79e97a89a0d66bc54b515466.tex}}}}
-
-\newcommand{\sailvalundefinedBitvector}{\saildoclabelled{sailzundefinedzybitvector}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_bitvectorc0153f961b53b1b17bf36adcf5409590.tex}}}}
-
-\newcommand{\sailvalundefinedUnit}{\saildoclabelled{sailzundefinedzyunit}{\saildocval{}{\lstinputlisting[language=sail]{out/valzundefined_unitd751910db26c6cf7ec5d02a503ad4f9e.tex}}}}
-
 \newcommand{\sailregistersmall}{\saildoclabelled{sailregisterzsmall}{\saildocregister{}{\lstinputlisting[language=sail]{out/registerzsmall1f2dadee7c54a6dda75948109cacc9d5.tex}}}}
 
 \newcommand{\sailregisterbig}{\saildoclabelled{sailregisterzbig}{\saildocregister{}{\lstinputlisting[language=sail]{out/registerzbig1066534ae1b23930893efa3da0ce3b60.tex}}}}
 
-\newcommand{\sailvalinitializzeRegisters}{\saildoclabelled{sailzinitializzezyregisters}{\saildocval{}{\lstinputlisting[language=sail]{out/valzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
-\newcommand{\sailfninitializzeRegisters}{\saildoclabelled{sailfnzinitializzezyregisters}{\saildocfn{}{\lstinputlisting[language=sail]{out/fnzinitializze_registerscd0d92787ce5f32f7391468692054f16.tex}}}}
-
 \newcommand{\sailval}[1]{
-  \ifstrequal{#1}{initialize_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailvalinitializzeRegisters}{}%
-  \ifstrequal{#1}{internal_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{internal\_pick}{\sailvalinternalPick}{}%
-  \ifstrequal{#1}{undefined_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined\_bit}{\sailvalundefinedBit}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\sailvalundefinedBitvector}{}%
-  \ifstrequal{#1}{undefined_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined\_bool}{\sailvalundefinedBool}{}%
-  \ifstrequal{#1}{undefined_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined\_int}{\sailvalundefinedInt}{}%
-  \ifstrequal{#1}{undefined_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined\_list}{\sailvalundefinedList}{}%
-  \ifstrequal{#1}{undefined_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined\_nat}{\sailvalundefinedNat}{}%
-  \ifstrequal{#1}{undefined_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined\_range}{\sailvalundefinedRange}{}%
-  \ifstrequal{#1}{undefined_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined\_real}{\sailvalundefinedReal}{}%
-  \ifstrequal{#1}{undefined_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined\_string}{\sailvalundefinedString}{}%
-  \ifstrequal{#1}{undefined_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined\_unit}{\sailvalundefinedUnit}{}%
-  \ifstrequal{#1}{undefined_vector}{\sailvalundefinedVector}{}%
-  \ifstrequal{#1}{undefined\_vector}{\sailvalundefinedVector}{}}
+  }
 
 \newcommand{\sailrefval}[2]{
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{internal_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{internal\_pick}{\hyperref[sailzinternalzypick]{#2}}{}%
-  \ifstrequal{#1}{undefined_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bit}{\hyperref[sailzundefinedzybit]{#2}}{}%
-  \ifstrequal{#1}{undefined_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bitvector}{\hyperref[sailzundefinedzybitvector]{#2}}{}%
-  \ifstrequal{#1}{undefined_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined\_bool}{\hyperref[sailzundefinedzybool]{#2}}{}%
-  \ifstrequal{#1}{undefined_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined\_int}{\hyperref[sailzundefinedzyint]{#2}}{}%
-  \ifstrequal{#1}{undefined_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined\_list}{\hyperref[sailzundefinedzylist]{#2}}{}%
-  \ifstrequal{#1}{undefined_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined\_nat}{\hyperref[sailzundefinedzynat]{#2}}{}%
-  \ifstrequal{#1}{undefined_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined\_range}{\hyperref[sailzundefinedzyrange]{#2}}{}%
-  \ifstrequal{#1}{undefined_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined\_real}{\hyperref[sailzundefinedzyreal]{#2}}{}%
-  \ifstrequal{#1}{undefined_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined\_string}{\hyperref[sailzundefinedzystring]{#2}}{}%
-  \ifstrequal{#1}{undefined_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined\_unit}{\hyperref[sailzundefinedzyunit]{#2}}{}%
-  \ifstrequal{#1}{undefined_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}%
-  \ifstrequal{#1}{undefined\_vector}{\hyperref[sailzundefinedzyvector]{#2}}{}}
+  }
 
 \newcommand{\sailfn}[1]{
-  \ifstrequal{#1}{initialize_registers}{\sailfninitializzeRegisters}{}%
-  \ifstrequal{#1}{initialize\_registers}{\sailfninitializzeRegisters}{}}
+  }
 
 \newcommand{\sailreffn}[2]{
-  \ifstrequal{#1}{initialize_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}%
-  \ifstrequal{#1}{initialize\_registers}{\hyperref[sailfnzinitializzezyregisters]{#2}}{}}
+  }
 
 \newcommand{\sailtype}[1]{
   }
Generating LaTeX for reg.sail: [0;93moutput is different[0m
Building LaTeX for reg.sail: [0;91mlatexmk not installed[0m
LaTeX testing: Passed 1 out of 10


==========================================
C tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
---------------------------------------------------------------------
Testing unoptimized C with C options:  Sail options:  valgrind: False
---------------------------------------------------------------------
fallthrough_exception.sail ............. [92mok[0m
list_let.sail .......................... [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
and_block.sail ......................... [92mok[0m
empty_list.sail ........................ [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
issue136.sail .......................... [92mok[0m
primop.sail ............................ [92mok[0m
real.sail .............................. [92mok[0m
reg_init_let.sail ...................... [92mok[0m
anf_block.sail ......................... [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
gvector.sail ........................... [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
read_write_ram.sail .................... [92mok[0m
implicits.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_hex_bits.sail 1> lib_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

get_slice_int.sail ..................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
issue37.sail ........................... [92mok[0m
vmatch.sail ............................ [92mok[0m
toplevel_tyvar.sail .................... [92mok[0m
nexp_simp_euclidian.sail ............... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  poly_mapping2.sail 1> poly_mapping2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  rv_format.sail 1> rv_format.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

enum_tup_match.sail .................... [92mok[0m
either.sail ............................ [92mok[0m
unconstructed_type_mono.sail ........... [92mok[0m
single_arg.sail ........................ [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
split.sail ............................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  rv_format2.sail 1> rv_format2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

nested_fields.sail ..................... [92mok[0m
bitvector_update.sail .................. [92mok[0m
list_mut.sail .......................... [92mok[0m
varswap.sail ........................... [92mok[0m
unused_poly_ctor.sail .................. [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
custom_flow.sail ....................... [92mok[0m
list_test.sail ......................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
int_struct.sail ........................ [92mok[0m
set_struct2.sail ....................... [92mok[0m
xlen32.sail ............................ [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
fail_exception.sail .................... [92mok[0m
small_slice.sail ....................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
prelude.sail ........................... [92mok[0m
special_annot.sail ..................... [92mok[0m
poly_union_rev.sail .................... [92mok[0m
xlen_val.sail .......................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
return_leak.sail ....................... [92mok[0m
list_scope.sail ........................ [92mok[0m
undefined_nat.sail ..................... [92mok[0m
issue401.sail .......................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
tl_let.sail ............................ [92mok[0m
real_prop.sail ......................... [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue232_2.sail 1> issue232_2.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

gvectorlit.sail ........................ [92mok[0m
either_rvbug.sail ...................... [92mok[0m
config_register.sail ................... [92mok[0m
simple_bitmanip.sail ................... [92mok[0m
struct_mapping.sail .................... [92mok[0m
enum_functions.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_valid_hex_bits.sail 1> lib_valid_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

undefined_union.sail ................... [92mok[0m
anon_rec.sail .......................... [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
list_cons_cons.sail .................... [92mok[0m
bitvector_update2.sail ................. [92mok[0m
large_bitvector.sail ................... [92mok[0m
type_if_bits.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  zeros_mapping.sail 1> zeros_mapping.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

tuple_union.sail ....................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
pointer_assign.sail .................... [92mok[0m
tuple_fun.sail ......................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
flow_restrict.sail ..................... [92mok[0m
constructor247.sail .................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
set_struct.sail ........................ [92mok[0m
enum_map.sail .......................... [92mok[0m
rv_memop.sail .......................... [92mok[0m
global_let_shadow.sail ................. [92mok[0m
fvector_update.sail .................... [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
poly_mapping.sail ...................... [92mok[0m
issue362.sail .......................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
fail_issue203.sail ..................... [92mok[0m
try_return.sail ........................ [92mok[0m
double_option.sail ..................... [92mok[0m
let_option_shadow.sail ................. [92mok[0m
let_option.sail ........................ [92mok[0m
dead_branch.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  mapping_compose.sail 1> mapping_compose.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

enum_match.sail ........................ [92mok[0m
eq_struct.sail ......................... [92mok[0m
tl_pat.sail ............................ [92mok[0m
string_literal_type.sail ............... [92mok[0m
extend_simple.sail ..................... [92mok[0m
poly_int_record.sail ................... [92mok[0m
downcast_fn.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_hex_bits_signed.sail 1> lib_hex_bits_signed.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

assign_rename_bug.sail ................. [92mok[0m
string_of_bits.sail .................... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
return_register_ref.sail ............... [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
overload_mapping.sail .................. [92mok[0m
reg_32_64.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue243_fixed.sail 1> issue243_fixed.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

poly_pair.sail ......................... [92mok[0m
hello_world.sail ....................... [92mok[0m
mapping.sail ........................... [92mok[0m
match_bind.sail ........................ [92mok[0m
pr194.sail ............................. [92mok[0m
list_torture.sail ...................... [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
list_scope2.sail ....................... [92mok[0m
infix_include.sail ..................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
issue429.sail .......................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
inc_tests.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue232.sail 1> issue232.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

short_circuit.sail ..................... [92mok[0m
single_guard.sail ...................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
warl.sail .............................. [92mok[0m
exn_hello_world.sail ................... [92mok[0m
zero_length_bv.sail .................... [92mok[0m
encdec_subrange.sail ................... [92mok[0m
poly_tup.sail .......................... [92mok[0m
warl2.sail ............................. [92mok[0m
struct.sail ............................ [92mok[0m
scattered_mapping.sail ................. [92mok[0m
pow2.sail .............................. [92mok[0m
nested_mapping.sail .................... [92mok[0m
new_bitfields.sail ..................... [92mok[0m
vector_example.sail .................... [92mok[0m
config.sail ............................ [92mok[0m
poly_union.sail ........................ [92mok[0m
non_unique.sail ........................ [92mok[0m
poly_record.sail ....................... [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
string_take.sail ....................... [92mok[0m
letbind.sail ........................... [92mok[0m
concurrency_interface.sail ............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  encdec.sail 1> encdec.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

bitvector.sail ......................... [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
option.sail ............................ [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
option_nest.sail ....................... [92mok[0m
list_scope3.sail ....................... [92mok[0m
cfold_reg.sail ......................... [92mok[0m
poly_simple.sail ....................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
option_option.sail ..................... [92mok[0m
issue202_1.sail ........................ [92mok[0m
vector_init.sail ....................... [92mok[0m
string_of_bits2.sail ................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
loop_exception.sail .................... [92mok[0m
[94m164 passes and 12 failures[0m
--------------------------------------------------------------------------------------------
Testing unoptimized C with C++ compiler with C options: -xc++ Sail options:  valgrind: False
--------------------------------------------------------------------------------------------
fallthrough_exception.sail ............. [92mok[0m
empty_list.sail ........................ [92mok[0m
list_let.sail .......................... [92mok[0m
and_block.sail ......................... [92mok[0m
primop.sail ............................ [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
issue136.sail .......................... [92mok[0m
anf_block.sail ......................... [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
implicits.sail ......................... [92mok[0m
real.sail .............................. [92mok[0m
reg_init_let.sail ...................... [92mok[0m
gvector.sail ........................... [92mok[0m
read_write_ram.sail .................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_hex_bits.sail 1> lib_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

issue37.sail ........................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
vmatch.sail ............................ [92mok[0m
get_slice_int.sail ..................... [92mok[0m
nexp_simp_euclidian.sail ............... [92mok[0m
toplevel_tyvar.sail .................... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  poly_mapping2.sail 1> poly_mapping2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  rv_format.sail 1> rv_format.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

either.sail ............................ [92mok[0m
enum_tup_match.sail .................... [92mok[0m
single_arg.sail ........................ [92mok[0m
unconstructed_type_mono.sail ........... [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
split.sail ............................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  rv_format2.sail 1> rv_format2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

unused_poly_ctor.sail .................. [92mok[0m
custom_flow.sail ....................... [92mok[0m
bitvector_update.sail .................. [92mok[0m
nested_fields.sail ..................... [92mok[0m
varswap.sail ........................... [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
list_mut.sail .......................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
list_test.sail ......................... [92mok[0m
set_struct2.sail ....................... [92mok[0m
small_slice.sail ....................... [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
int_struct.sail ........................ [92mok[0m
xlen32.sail ............................ [92mok[0m
fail_exception.sail .................... [92mok[0m
prelude.sail ........................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
poly_union_rev.sail .................... [92mok[0m
special_annot.sail ..................... [92mok[0m
xlen_val.sail .......................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
return_leak.sail ....................... [92mok[0m
tl_let.sail ............................ [92mok[0m
list_scope.sail ........................ [92mok[0m
issue401.sail .......................... [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
undefined_nat.sail ..................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
real_prop.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue232_2.sail 1> issue232_2.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

simple_bitmanip.sail ................... [92mok[0m
config_register.sail ................... [92mok[0m
gvectorlit.sail ........................ [92mok[0m
either_rvbug.sail ...................... [92mok[0m
struct_mapping.sail .................... [92mok[0m
enum_functions.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_valid_hex_bits.sail 1> lib_valid_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

undefined_union.sail ................... [92mok[0m
list_cons_cons.sail .................... [92mok[0m
type_if_bits.sail ...................... [92mok[0m
anon_rec.sail .......................... [92mok[0m
bitvector_update2.sail ................. [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
large_bitvector.sail ................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  zeros_mapping.sail 1> zeros_mapping.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

tuple_fun.sail ......................... [92mok[0m
pointer_assign.sail .................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
tuple_union.sail ....................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
flow_restrict.sail ..................... [92mok[0m
constructor247.sail .................... [92mok[0m
fvector_update.sail .................... [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
rv_memop.sail .......................... [92mok[0m
enum_map.sail .......................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
global_let_shadow.sail ................. [92mok[0m
set_struct.sail ........................ [92mok[0m
poly_mapping.sail ...................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
issue362.sail .......................... [92mok[0m
dead_branch.sail ....................... [92mok[0m
double_option.sail ..................... [92mok[0m
let_option.sail ........................ [92mok[0m
try_return.sail ........................ [92mok[0m
let_option_shadow.sail ................. [92mok[0m
fail_issue203.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  mapping_compose.sail 1> mapping_compose.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

[91mFailed[0m: c++ -xc++ tl_pat.c /home/trdthg/repo/sail/lib/*.c -lgmp -lz -I /home/trdthg/repo/sail/lib -o tl_pat.bin
[94mstdout[0m:

[94mstderr[0m:
tl_pat.c:58:31: error: ‘zX::<unnamed union>::<unnamed struct>::zX’ has the same name as the class in which it is declared
   58 |   union {struct { sail_string zX; };};
      |                               ^~
tl_pat.c: In function ‘void create_zX(zX*)’:
tl_pat.c:63:28: error: invalid use of ‘zX::zX’
   63 |   CREATE(sail_string)(&op->zX);
      |                            ^~
tl_pat.c: In function ‘void kill_zX(zX*)’:
tl_pat.c:72:28: error: invalid use of ‘zX::zX’
   72 |     KILL(sail_string)(&op->zX);
      |                            ^~
tl_pat.c: In function ‘void copy_zX(zX*, zX)’:
tl_pat.c:78:29: error: invalid use of ‘zX::zX’
   78 |     KILL(sail_string)(&rop->zX);
      |                             ^~
tl_pat.c:82:31: error: invalid use of ‘zX::zX’
   82 |     CREATE(sail_string)(&rop->zX); COPY(sail_string)(&rop->zX, op.zX);
      |                               ^~
tl_pat.c:82:60: error: invalid use of ‘zX::zX’
   82 |     CREATE(sail_string)(&rop->zX); COPY(sail_string)(&rop->zX, op.zX);
      |                                                            ^~
tl_pat.c:82:67: error: invalid use of ‘zX::zX’
   82 |     CREATE(sail_string)(&rop->zX); COPY(sail_string)(&rop->zX, op.zX);
      |                                                                   ^~
tl_pat.c: In function ‘bool eq_zX(zX, zX)’:
tl_pat.c:88:35: error: invalid use of ‘zX::zX’
   88 |     return EQUAL(sail_string)(op1.zX, op2.zX);
      |                                   ^~
tl_pat.c:88:43: error: invalid use of ‘zX::zX’
   88 |     return EQUAL(sail_string)(op1.zX, op2.zX);
      |                                           ^~
tl_pat.c: In function ‘void zX(zX*, const_sail_string)’:
tl_pat.c:94:29: error: invalid use of ‘zX::zX’
   94 |     KILL(sail_string)(&rop->zX);
      |                             ^~
tl_pat.c:97:29: error: invalid use of ‘zX::zX’
   97 |   CREATE(sail_string)(&rop->zX);
      |                             ^~
tl_pat.c:98:27: error: invalid use of ‘zX::zX’
   98 |   COPY(sail_string)(&rop->zX, op);
      |                           ^~
tl_pat.c: In function ‘void zf(char**, zX)’:
tl_pat.c:112:35: error: invalid use of ‘zX::zX’
  112 |   COPY(sail_string)(&zstr, zgsz30.zX);
      |                                   ^~

eq_struct.sail ......................... [92mok[0m
downcast_fn.sail ....................... [92mok[0m
enum_match.sail ........................ [92mok[0m
string_literal_type.sail ............... [92mok[0m
poly_int_record.sail ................... [92mok[0m
extend_simple.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  lib_hex_bits_signed.sail 1> lib_hex_bits_signed.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

return_register_ref.sail ............... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
string_of_bits.sail .................... [92mok[0m
assign_rename_bug.sail ................. [92mok[0m
overload_mapping.sail .................. [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
reg_32_64.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue243_fixed.sail 1> issue243_fixed.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

pr194.sail ............................. [92mok[0m
hello_world.sail ....................... [92mok[0m
poly_pair.sail ......................... [92mok[0m
match_bind.sail ........................ [92mok[0m
mapping.sail ........................... [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
list_torture.sail ...................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
list_scope2.sail ....................... [92mok[0m
infix_include.sail ..................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
issue429.sail .......................... [92mok[0m
inc_tests.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  issue232.sail 1> issue232.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

short_circuit.sail ..................... [92mok[0m
exn_hello_world.sail ................... [92mok[0m
single_guard.sail ...................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
warl.sail .............................. [92mok[0m
zero_length_bv.sail .................... [92mok[0m
encdec_subrange.sail ................... [92mok[0m
poly_tup.sail .......................... [92mok[0m
struct.sail ............................ [92mok[0m
warl2.sail ............................. [92mok[0m
scattered_mapping.sail ................. [92mok[0m
pow2.sail .............................. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
nested_mapping.sail .................... [92mok[0m
vector_example.sail .................... [92mok[0m
poly_record.sail ....................... [92mok[0m
config.sail ............................ [92mok[0m
poly_union.sail ........................ [92mok[0m
non_unique.sail ........................ [92mok[0m
string_take.sail ....................... [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
letbind.sail ........................... [92mok[0m
concurrency_interface.sail ............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c  encdec.sail 1> encdec.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

list_scope3.sail ....................... [92mok[0m
bitvector.sail ......................... [92mok[0m
option_nest.sail ....................... [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
option.sail ............................ [92mok[0m
cfold_reg.sail ......................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
string_of_bits2.sail ................... [92mok[0m
poly_simple.sail ....................... [92mok[0m
option_option.sail ..................... [92mok[0m
issue202_1.sail ........................ [92mok[0m
vector_init.sail ....................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
loop_exception.sail .................... [92mok[0m
[94m163 passes and 12 failures (1 expected failures)[0m
-----------------------------------------------------------------------
Testing optimized C with C options: -O2 Sail options: -O valgrind: True
-----------------------------------------------------------------------
skipping because no valgrind found
[94m0 passes and 0 failures[0m
-----------------------------------------------------------------------------------------------
Testing optimized C with C++ compiler with C options: -xc++ -O2 Sail options: -O valgrind: True
-----------------------------------------------------------------------------------------------
skipping because no valgrind found
[94m0 passes and 0 failures[0m
---------------------------------------------------------------------------------------
Testing constant folding with C options:  Sail options: -Oconstant_fold valgrind: False
---------------------------------------------------------------------------------------
empty_list.sail ........................ [92mok[0m
list_let.sail .......................... [92mok[0m
and_block.sail ......................... [92mok[0m
fallthrough_exception.sail ............. [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
primop.sail ............................ [92mok[0m
issue136.sail .......................... [92mok[0m
anf_block.sail ......................... [92mok[0m
real.sail .............................. [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
reg_init_let.sail ...................... [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
read_write_ram.sail .................... [92mok[0m
implicits.sail ......................... [92mok[0m
gvector.sail ........................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold lib_hex_bits.sail 1> lib_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

vmatch.sail ............................ [92mok[0m
issue37.sail ........................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
get_slice_int.sail ..................... [92mok[0m
toplevel_tyvar.sail .................... [92mok[0m
nexp_simp_euclidian.sail ............... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold poly_mapping2.sail 1> poly_mapping2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold rv_format.sail 1> rv_format.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

unconstructed_type_mono.sail ........... [92mok[0m
enum_tup_match.sail .................... [92mok[0m
either.sail ............................ [92mok[0m
single_arg.sail ........................ [92mok[0m
split.sail ............................. [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold rv_format2.sail 1> rv_format2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

varswap.sail ........................... [92mok[0m
list_mut.sail .......................... [92mok[0m
unused_poly_ctor.sail .................. [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
bitvector_update.sail .................. [92mok[0m
nested_fields.sail ..................... [92mok[0m
custom_flow.sail ....................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
int_struct.sail ........................ [92mok[0m
list_test.sail ......................... [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
set_struct2.sail ....................... [92mok[0m
xlen32.sail ............................ [92mok[0m
fail_exception.sail .................... [92mok[0m
small_slice.sail ....................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
poly_union_rev.sail .................... [92mok[0m
xlen_val.sail .......................... [92mok[0m
special_annot.sail ..................... [92mok[0m
prelude.sail ........................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
return_leak.sail ....................... [92mok[0m
tl_let.sail ............................ [92mok[0m
issue401.sail .......................... [92mok[0m
list_scope.sail ........................ [92mok[0m
undefined_nat.sail ..................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
real_prop.sail ......................... [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold issue232_2.sail 1> issue232_2.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

simple_bitmanip.sail ................... [92mok[0m
config_register.sail ................... [92mok[0m
gvectorlit.sail ........................ [92mok[0m
either_rvbug.sail ...................... [92mok[0m
struct_mapping.sail .................... [92mok[0m
enum_functions.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold lib_valid_hex_bits.sail 1> lib_valid_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

nonexistent_pragma.sail ................ [92mok[0m
bitvector_update2.sail ................. [92mok[0m
list_cons_cons.sail .................... [92mok[0m
undefined_union.sail ................... [92mok[0m
anon_rec.sail .......................... [92mok[0m
large_bitvector.sail ................... [92mok[0m
type_if_bits.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold zeros_mapping.sail 1> zeros_mapping.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

pointer_assign.sail .................... [92mok[0m
tuple_fun.sail ......................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
tuple_union.sail ....................... [92mok[0m
flow_restrict.sail ..................... [92mok[0m
constructor247.sail .................... [92mok[0m
rv_memop.sail .......................... [92mok[0m
fvector_update.sail .................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
global_let_shadow.sail ................. [92mok[0m
enum_map.sail .......................... [92mok[0m
set_struct.sail ........................ [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
poly_mapping.sail ...................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
try_return.sail ........................ [92mok[0m
issue362.sail .......................... [92mok[0m
let_option_shadow.sail ................. [92mok[0m
fail_issue203.sail ..................... [92mok[0m
double_option.sail ..................... [92mok[0m
let_option.sail ........................ [92mok[0m
dead_branch.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold mapping_compose.sail 1> mapping_compose.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

tl_pat.sail ............................ [92mok[0m
eq_struct.sail ......................... [92mok[0m
string_literal_type.sail ............... [92mok[0m
downcast_fn.sail ....................... [92mok[0m
enum_match.sail ........................ [92mok[0m
extend_simple.sail ..................... [92mok[0m
poly_int_record.sail ................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold lib_hex_bits_signed.sail 1> lib_hex_bits_signed.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

string_of_bits.sail .................... [92mok[0m
return_register_ref.sail ............... [92mok[0m
assign_rename_bug.sail ................. [92mok[0m
reg_32_64.sail ......................... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
overload_mapping.sail .................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold issue243_fixed.sail 1> issue243_fixed.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

poly_pair.sail ......................... [92mok[0m
hello_world.sail ....................... [92mok[0m
pr194.sail ............................. [92mok[0m
match_bind.sail ........................ [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
list_torture.sail ...................... [92mok[0m
mapping.sail ........................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
list_scope2.sail ....................... [92mok[0m
infix_include.sail ..................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
inc_tests.sail ......................... [92mok[0m
issue429.sail .......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold issue232.sail 1> issue232.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

short_circuit.sail ..................... [92mok[0m
exn_hello_world.sail ................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
zero_length_bv.sail .................... [92mok[0m
single_guard.sail ...................... [92mok[0m
warl.sail .............................. [92mok[0m
encdec_subrange.sail ................... [92mok[0m
poly_tup.sail .......................... [92mok[0m
struct.sail ............................ [92mok[0m
scattered_mapping.sail ................. [92mok[0m
warl2.sail ............................. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
nested_mapping.sail .................... [92mok[0m
vector_example.sail .................... [92mok[0m
pow2.sail .............................. [92mok[0m
poly_record.sail ....................... [92mok[0m
poly_union.sail ........................ [92mok[0m
config.sail ............................ [92mok[0m
non_unique.sail ........................ [92mok[0m
string_take.sail ....................... [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
concurrency_interface.sail ............. [92mok[0m
letbind.sail ........................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -Oconstant_fold encdec.sail 1> encdec.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

option_nest.sail ....................... [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
bitvector.sail ......................... [92mok[0m
cfold_reg.sail ......................... [92mok[0m
option.sail ............................ [92mok[0m
list_scope3.sail ....................... [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
poly_simple.sail ....................... [92mok[0m
issue202_1.sail ........................ [92mok[0m
string_of_bits2.sail ................... [92mok[0m
loop_exception.sail .................... [92mok[0m
option_option.sail ..................... [92mok[0m
vector_init.sail ....................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
[94m164 passes and 12 failures[0m
--------------------------------------------------------------------------------------------------------------
Testing undefined behavior sanitised with C options: -O2 -fsanitize=undefined Sail options: -O valgrind: False
--------------------------------------------------------------------------------------------------------------
and_block.sail ......................... [92mok[0m
list_let.sail .......................... [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
fallthrough_exception.sail ............. [92mok[0m
empty_list.sail ........................ [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
issue136.sail .......................... [92mok[0m
primop.sail ............................ [92mok[0m
anf_block.sail ......................... [92mok[0m
reg_init_let.sail ...................... [92mok[0m
real.sail .............................. [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
gvector.sail ........................... [92mok[0m
implicits.sail ......................... [92mok[0m
read_write_ram.sail .................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O lib_hex_bits.sail 1> lib_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

vmatch.sail ............................ [92mok[0m
issue37.sail ........................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
toplevel_tyvar.sail .................... [92mok[0m
get_slice_int.sail ..................... [92mok[0m
nexp_simp_euclidian.sail ............... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O poly_mapping2.sail 1> poly_mapping2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O rv_format.sail 1> rv_format.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

either.sail ............................ [92mok[0m
unconstructed_type_mono.sail ........... [92mok[0m
enum_tup_match.sail .................... [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
single_arg.sail ........................ [92mok[0m
split.sail ............................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O rv_format2.sail 1> rv_format2.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

custom_flow.sail ....................... [92mok[0m
unused_poly_ctor.sail .................. [92mok[0m
nested_fields.sail ..................... [92mok[0m
list_mut.sail .......................... [92mok[0m
bitvector_update.sail .................. [92mok[0m
varswap.sail ........................... [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
set_struct2.sail ....................... [92mok[0m
int_struct.sail ........................ [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
list_test.sail ......................... [92mok[0m
xlen32.sail ............................ [92mok[0m
small_slice.sail ....................... [92mok[0m
fail_exception.sail .................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
poly_union_rev.sail .................... [92mok[0m
xlen_val.sail .......................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
special_annot.sail ..................... [92mok[0m
prelude.sail ........................... [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
return_leak.sail ....................... [92mok[0m
tl_let.sail ............................ [92mok[0m
list_scope.sail ........................ [92mok[0m
undefined_nat.sail ..................... [92mok[0m
issue401.sail .......................... [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
real_prop.sail ......................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O issue232_2.sail 1> issue232_2.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

either_rvbug.sail ...................... [92mok[0m
gvectorlit.sail ........................ [92mok[0m
struct_mapping.sail .................... [92mok[0m
config_register.sail ................... [92mok[0m
simple_bitmanip.sail ................... [92mok[0m
enum_functions.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O lib_valid_hex_bits.sail 1> lib_valid_hex_bits.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

bitvector_update2.sail ................. [92mok[0m
anon_rec.sail .......................... [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
undefined_union.sail ................... [92mok[0m
list_cons_cons.sail .................... [92mok[0m
large_bitvector.sail ................... [92mok[0m
type_if_bits.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O zeros_mapping.sail 1> zeros_mapping.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

tuple_fun.sail ......................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
pointer_assign.sail .................... [92mok[0m
tuple_union.sail ....................... [92mok[0m
flow_restrict.sail ..................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
constructor247.sail .................... [92mok[0m
global_let_shadow.sail ................. [92mok[0m
set_struct.sail ........................ [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
reg_ref.sail ........................... [92mok[0m
fvector_update.sail .................... [92mok[0m
rv_memop.sail .......................... [92mok[0m
enum_map.sail .......................... [92mok[0m
poly_mapping.sail ...................... [92mok[0m
fail_issue203.sail ..................... [92mok[0m
dead_branch.sail ....................... [92mok[0m
issue362.sail .......................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
double_option.sail ..................... [92mok[0m
let_option_shadow.sail ................. [92mok[0m
let_option.sail ........................ [92mok[0m
try_return.sail ........................ [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O mapping_compose.sail 1> mapping_compose.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

extend_simple.sail ..................... [92mok[0m
enum_match.sail ........................ [92mok[0m
string_literal_type.sail ............... [92mok[0m
tl_pat.sail ............................ [92mok[0m
eq_struct.sail ......................... [92mok[0m
downcast_fn.sail ....................... [92mok[0m
poly_int_record.sail ................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O lib_hex_bits_signed.sail 1> lib_hex_bits_signed.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

string_of_bits.sail .................... [92mok[0m
return_register_ref.sail ............... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
assign_rename_bug.sail ................. [92mok[0m
overload_mapping.sail .................. [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
reg_32_64.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O issue243_fixed.sail 1> issue243_fixed.c
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

match_bind.sail ........................ [92mok[0m
pr194.sail ............................. [92mok[0m
poly_pair.sail ......................... [92mok[0m
hello_world.sail ....................... [92mok[0m
mapping.sail ........................... [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
list_torture.sail ...................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
infix_include.sail ..................... [92mok[0m
issue429.sail .......................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
list_scope2.sail ....................... [92mok[0m
inc_tests.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O issue232.sail 1> issue232.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

exn_hello_world.sail ................... [92mok[0m
single_guard.sail ...................... [92mok[0m
short_circuit.sail ..................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
warl.sail .............................. [92mok[0m
zero_length_bv.sail .................... [92mok[0m
encdec_subrange.sail ................... [92mok[0m
poly_tup.sail .......................... [92mok[0m
struct.sail ............................ [92mok[0m
warl2.sail ............................. [92mok[0m
scattered_mapping.sail ................. [92mok[0m
nested_mapping.sail .................... [92mok[0m
pow2.sail .............................. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
vector_example.sail .................... [92mok[0m
non_unique.sail ........................ [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
poly_union.sail ........................ [92mok[0m
poly_record.sail ....................... [92mok[0m
string_take.sail ....................... [92mok[0m
config.sail ............................ [92mok[0m
letbind.sail ........................... [92mok[0m
concurrency_interface.sail ............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -no_warn -c -O encdec.sail 1> encdec.c
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

list_scope3.sail ....................... [92mok[0m
option.sail ............................ [92mok[0m
option_nest.sail ....................... [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
bitvector.sail ......................... [92mok[0m
cfold_reg.sail ......................... [92mok[0m
option_option.sail ..................... [92mok[0m
string_of_bits2.sail ................... [92mok[0m
poly_simple.sail ....................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
issue202_1.sail ........................ [92mok[0m
vector_init.sail ....................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
loop_exception.sail .................... [92mok[0m
[94m164 passes and 12 failures[0m
-------------------
Testing interpreter
-------------------
and_block.sail ......................... [92mok[0m
fallthrough_exception.sail ............. [92mok[0m
issue136.sail .......................... [92mok[0m
primop.sail ............................ [92mok[0m
list_let.sail .......................... [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
empty_list.sail ........................ [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
anf_block.sail ......................... [92mok[0m
real.sail .............................. [92mok[0m
reg_init_let.sail ...................... [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
implicits.sail ......................... [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
gvector.sail ........................... [92mok[0m
read_write_ram.sail .................... [92mok[0m
vmatch.sail ............................ [92mok[0m
issue37.sail ........................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout lib_hex_bits.iresult lib_hex_bits.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

toplevel_tyvar.sail .................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
get_slice_int.sail ..................... [92mok[0m
nexp_simp_euclidian.sail ............... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout poly_mapping2.iresult poly_mapping2.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

unconstructed_type_mono.sail ........... [92mok[0m
either.sail ............................ [92mok[0m
single_arg.sail ........................ [92mok[0m
enum_tup_match.sail .................... [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout rv_format.iresult rv_format.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

split.sail ............................. [92mok[0m
bitvector_update.sail .................. [92mok[0m
nested_fields.sail ..................... [92mok[0m
unused_poly_ctor.sail .................. [92mok[0m
varswap.sail ........................... [92mok[0m
list_mut.sail .......................... [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout rv_format2.iresult rv_format2.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

custom_flow.sail ....................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
list_test.sail ......................... [92mok[0m
set_struct2.sail ....................... [92mok[0m
int_struct.sail ........................ [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
xlen32.sail ............................ [92mok[0m
fail_exception.sail .................... [92mok[0m
small_slice.sail ....................... [92mok[0m
special_annot.sail ..................... [92mok[0m
poly_union_rev.sail .................... [92mok[0m
prelude.sail ........................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
xlen_val.sail .......................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
tl_let.sail ............................ [92mok[0m
list_scope.sail ........................ [92mok[0m
issue401.sail .......................... [92mok[0m
return_leak.sail ....................... [92mok[0m
undefined_nat.sail ..................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
real_prop.sail ......................... [92mok[0m
gvectorlit.sail ........................ [92mok[0m
config_register.sail ................... [92mok[0m
simple_bitmanip.sail ................... [92mok[0m
either_rvbug.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout issue232_2.iresult issue232_2.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue232_2.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Fatal error: exception Not_found

enum_functions.sail .................... [92mok[0m
struct_mapping.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
undefined_union.sail ................... [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
large_bitvector.sail ................... [92mok[0m
anon_rec.sail .......................... [92mok[0m
bitvector_update2.sail ................. [92mok[0m
list_cons_cons.sail .................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout lib_valid_hex_bits.iresult lib_valid_hex_bits.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

type_if_bits.sail ...................... [92mok[0m
pointer_assign.sail .................... [92mok[0m
tuple_fun.sail ......................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
constructor247.sail .................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout zeros_mapping.iresult zeros_mapping.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96mzeros_mapping.sail[0m:7.0-7:
7[96m |[0mmapping zeros_16 : unit <-> bits(16) = { () <-> 0x0000 }
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m0xffff[0m

Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

flow_restrict.sail ..................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
tuple_union.sail ....................... [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
global_let_shadow.sail ................. [92mok[0m
rv_memop.sail .......................... [92mok[0m
fvector_update.sail .................... [92mok[0m
set_struct.sail ........................ [92mok[0m
reg_ref.sail ........................... [92mok[0m
poly_mapping.sail ...................... [92mok[0m
enum_map.sail .......................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
issue362.sail .......................... [92mok[0m
double_option.sail ..................... [92mok[0m
try_return.sail ........................ [92mok[0m
fail_issue203.sail ..................... [92mok[0m
let_option.sail ........................ [92mok[0m
dead_branch.sail ....................... [92mok[0m
let_option_shadow.sail ................. [92mok[0m
tl_pat.sail ............................ [92mok[0m
downcast_fn.sail ....................... [92mok[0m
string_literal_type.sail ............... [92mok[0m
eq_struct.sail ......................... [92mok[0m
enum_match.sail ........................ [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout mapping_compose.iresult mapping_compose.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

poly_int_record.sail ................... [92mok[0m
extend_simple.sail ..................... [92mok[0m
return_register_ref.sail ............... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
string_of_bits.sail .................... [92mok[0m
assign_rename_bug.sail ................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout lib_hex_bits_signed.iresult lib_hex_bits_signed.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

reg_32_64.sail ......................... [92mok[0m
overload_mapping.sail .................. [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
poly_pair.sail ......................... [92mok[0m
hello_world.sail ....................... [92mok[0m
match_bind.sail ........................ [92mok[0m
pr194.sail ............................. [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
list_torture.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout issue243_fixed.iresult issue243_fixed.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue243_fixed.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

mapping.sail ........................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
infix_include.sail ..................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
list_scope2.sail ....................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
inc_tests.sail ......................... [92mok[0m
issue429.sail .......................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
single_guard.sail ...................... [92mok[0m
short_circuit.sail ..................... [92mok[0m
zero_length_bv.sail .................... [92mok[0m
exn_hello_world.sail ................... [92mok[0m
warl.sail .............................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout issue232.iresult issue232.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue232.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Fatal error: exception Not_found

encdec_subrange.sail ................... [92mok[0m
struct.sail ............................ [92mok[0m
poly_tup.sail .......................... [92mok[0m
pow2.sail .............................. [92mok[0m
nested_mapping.sail .................... [92mok[0m
new_bitfields.sail ..................... [92mok[0m
warl2.sail ............................. [92mok[0m
scattered_mapping.sail ................. [92mok[0m
vector_example.sail .................... [92mok[0m
poly_record.sail ....................... [92mok[0m
poly_union.sail ........................ [92mok[0m
config.sail ............................ [92mok[0m
non_unique.sail ........................ [92mok[0m
string_take.sail ....................... [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
letbind.sail ........................... [92mok[0m
concurrency_interface.sail ............. [92mok[0m
option_nest.sail ....................... [92mok[0m
bitvector.sail ......................... [92mok[0m
option.sail ............................ [92mok[0m
cfold_reg.sail ......................... [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -undefined_gen -is execute.isail -iout encdec.iresult encdec.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Deprecated [96mencdec.sail[0m:30.24-82:
30[96m |[0mval main : unit -> unit effect {barr, eamem, escape, exmem, rmem, rreg, wmv, wreg}
  [91m |[0m                        [91m^--------------------------------------------------------^[0m
  [91m |[0m 
Explicit effect annotations are deprecated. They are no longer used and can be removed.

[93mWarning[0m: Incomplete pattern match statement at [96mencdec.sail[0m:11.0-7:
11[96m |[0mmapping decenc_p : bits(2) <-> pred = {
  [91m |[0m[91m^-----^[0m
  [91m |[0m 
The following expression is unmatched: [93m0b10[0m

Fatal error: exception Not_found

struct_pattern_partial.sail ............ [92mok[0m
list_scope3.sail ....................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
poly_simple.sail ....................... [92mok[0m
string_of_bits2.sail ................... [92mok[0m
option_option.sail ..................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
issue202_1.sail ........................ [92mok[0m
vector_init.sail ....................... [92mok[0m
loop_exception.sail .................... [92mok[0m
[94m164 passes and 12 failures[0m
-------------
Testing OCaml
-------------
and_block.sail ......................... [92mok[0m
list_let.sail .......................... [92mok[0m
fallthrough_exception.sail ............. [92mok[0m
empty_list.sail ........................ [92mok[0m
issue136.sail .......................... [92mok[0m
primop.sail ............................ [92mok[0m
fail_assert_mono_bug.sail .............. [92mok[0m
list_rec_functions2.sail ............... [92mok[0m
real.sail .............................. [92mok[0m
anf_block.sail ......................... [92mok[0m
reg_init_let.sail ...................... [92mok[0m
read_write_ram.sail .................... [92mok[0m
pc_no_wildcard.sail .................... [92mok[0m
gvector.sail ........................... [92mok[0m
vector_subrange_pattern.sail ........... [92mok[0m
implicits.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_lib_hex_bits -o lib_hex_bits_ocaml lib_hex_bits.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

nexp_simp_euclidian.sail ............... [92mok[0m
issue37.sail ........................... [92mok[0m
foreach_none.sail ...................... [92mok[0m
vmatch.sail ............................ [92mok[0m
get_slice_int.sail ..................... [92mok[0m
toplevel_tyvar.sail .................... [92mok[0m
int64_vector_literal.sail .............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_poly_mapping2 -o poly_mapping2_ocaml poly_mapping2.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mpoly_mapping2.sail[0m:17.47-67:
17[96m |[0mmapping test1m : bits(3) <-> bits(5) = { v <-> zero_int_bits(2) @ v }
  [91m |[0m                                               [91m^------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_rv_format -o rv_format_ocaml rv_format.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

either.sail ............................ [92mok[0m
unconstructed_type_mono.sail ........... [92mok[0m
enum_tup_match.sail .................... [92mok[0m
single_arg.sail ........................ [92mok[0m
struct_fn_arg.sail ..................... [92mok[0m
split.sail ............................. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_rv_format2 -o rv_format2_ocaml rv_format2.sail
[94mstdout[0m:

[94mstderr[0m:
Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96mrv_format2.sail[0m:32.79-108:
32[96m |[0m    0b0 @ opcode : bits(4) @ rd : regidx @ r1 : regidx @ r2 : regidx <-> AType(struct { opcode, rd, r1, r2 }),
  [91m |[0m                                                                               [91m^---------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1059, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 96, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1059, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

list_mut.sail .......................... [92mok[0m
varswap.sail ........................... [92mok[0m
custom_flow.sail ....................... [92mok[0m
nested_fields.sail ..................... [92mok[0m
bitvector_update.sail .................. [92mok[0m
unused_poly_ctor.sail .................. [92mok[0m
anf_as_pattern.sail .................... [92mok[0m
tuple_conversion.sail .................. [92mok[0m
list_test.sail ......................... [92mok[0m
bool_bits_mapping.sail ................. [92mok[0m
int_struct.sail ........................ [92mok[0m
fail_exception.sail .................... [92mok[0m
set_struct2.sail ....................... [92mok[0m
small_slice.sail ....................... [92mok[0m
xlen32.sail ............................ [92mok[0m
special_annot.sail ..................... [92mok[0m
for_shadow.sail ........................ [92mok[0m
xlen_val.sail .......................... [92mok[0m
poly_union_rev.sail .................... [92mok[0m
rv_duopod_bug.sail ..................... [92mok[0m
prelude.sail ........................... [92mok[0m
fast_signed.sail ....................... [92mok[0m
cheri128_hsb.sail ...................... [92mok[0m
tl_let.sail ............................ [92mok[0m
return_leak.sail ....................... [92mok[0m
pattern_concat_nest.sail ............... [92mok[0m
issue401.sail .......................... [92mok[0m
undefined_nat.sail ..................... [92mok[0m
list_scope.sail ........................ [92mok[0m
cheri_capreg.sail ...................... [92mok[0m
real_prop.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_issue232_2 -o issue232_2_ocaml issue232_2.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue232_2.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Fatal error: exception Not_found

gvectorlit.sail ........................ [92mok[0m
config_register.sail ................... [92mok[0m
either_rvbug.sail ...................... [92mok[0m
simple_bitmanip.sail ................... [92mok[0m
struct_mapping.sail .................... [92mok[0m
enum_functions.sail .................... [92mok[0m
two_mapping.sail ....................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_lib_valid_hex_bits -o lib_valid_hex_bits_ocaml lib_valid_hex_bits.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

undefined_union.sail ................... [92mok[0m
bitvector_update2.sail ................. [92mok[0m
anon_rec.sail .......................... [92mok[0m
large_bitvector.sail ................... [92mok[0m
list_cons_cons.sail .................... [92mok[0m
nonexistent_pragma.sail ................ [92mok[0m
type_if_bits.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_zeros_mapping -o zeros_mapping_ocaml zeros_mapping.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96mzeros_mapping.sail[0m:7.0-7:
7[96m |[0mmapping zeros_16 : unit <-> bits(16) = { () <-> 0x0000 }
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m0xffff[0m

Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 409):
[96mzeros_mapping.sail[0m:17.50-87:
17[96m |[0mmapping clause encdec = Add(dest, src1, src2) <-> zeros_16() @ dest @ src1 @ src2 @ 0b1
  [91m |[0m                                                  [91m^-----------------------------------^[0m
  [91m |[0m Invalid bitvector pattern
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize.bvc.(fun) in file "src/lib/pattern_completeness.ml", line 409, characters 27-86
  [91m |[0m Called from Stdlib__List.fold_left2 in file "list.ml", line 161, characters 37-51
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 559, characters 54-93
  [91m |[0m Called from Stdlib__List.map2 in file "list.ml", line 134, characters 15-22
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete.(fun) in file "src/lib/pattern_completeness.ml", line 555, characters 16-1023
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.simple_matrix_is_complete in file "src/lib/pattern_completeness.ml", line 552, characters 10-1023
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_matrixs.(fun) in file "src/lib/pattern_completeness.ml", line 987, characters 16-47
  [91m |[0m Called from Stdlib__List.fold_left in file "list.ml", line 123, characters 24-34
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

pointer_assign.sail .................... [92mok[0m
flow_restrict.sail ..................... [92mok[0m
tuple_union.sail ....................... [92mok[0m
constructor247.sail .................... [92mok[0m
tuple_fun.sail ......................... [92mok[0m
shadow_cleanup.sail .................... [92mok[0m
spc_mappings.sail ...................... [92mok[0m
global_let_shadow.sail ................. [92mok[0m
if_opt_typ.sail ........................ [92mok[0m
set_struct.sail ........................ [92mok[0m
rv_memop.sail .......................... [92mok[0m
poly_mapping.sail ...................... [92mok[0m
fvector_update.sail .................... [92mok[0m
enum_map.sail .......................... [92mok[0m
reg_ref.sail ........................... [92mok[0m
cheri_capstruct_order.sail ............. [92mok[0m
issue362.sail .......................... [92mok[0m
fail_issue203.sail ..................... [92mok[0m
let_option_shadow.sail ................. [92mok[0m
try_return.sail ........................ [92mok[0m
dead_branch.sail ....................... [92mok[0m
double_option.sail ..................... [92mok[0m
let_option.sail ........................ [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_mapping_compose -o mapping_compose_ocaml mapping_compose.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

tl_pat.sail ............................ [92mok[0m
eq_struct.sail ......................... [92mok[0m
downcast_fn.sail ....................... [92mok[0m
enum_match.sail ........................ [92mok[0m
string_literal_type.sail ............... [92mok[0m
poly_int_record.sail ................... [92mok[0m
extend_simple.sail ..................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_lib_hex_bits_signed -o lib_hex_bits_signed_ocaml lib_hex_bits_signed.sail
[94mstdout[0m:

[94mstderr[0m:
Fatal error: exception Not_found

string_of_bits.sail .................... [92mok[0m
assign_rename_bug.sail ................. [92mok[0m
reg_32_64.sail ......................... [92mok[0m
overload_mapping.sail .................. [92mok[0m
return_register_ref.sail ............... [92mok[0m
list_rec_functions1.sail ............... [92mok[0m
poly_outcome.sail ...................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_issue243_fixed -o issue243_fixed_ocaml issue243_fixed.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue243_fixed.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Internal error: Unreachable code (at "src/lib/pattern_completeness.ml" line 479):
[96missue243_fixed.sail[0m:17.22-49:
17[96m |[0mmapping f_bits = { FE(struct { e1 = e1, v1 = v1 }) <-> e_pair_bits(e1,EB) @ v1 }
  [91m |[0m                      [91m^-------------------------^[0m
  [91m |[0m P_struct pattern with non-struct type
  [91m |[0m 
  [91m |[0m Raised by primitive operation at Libsail__Reporting.err_unreachable in file "src/lib/reporting.ml", line 211, characters 18-62
  [91m |[0m Called from Libsail__Reporting.unreachable in file "src/lib/reporting.ml" (inlined), line 219, characters 34-61
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 479, characters 17-88
  [91m |[0m Called from Stdlib__List.map in file "list.ml", line 83, characters 15-19
  [91m |[0m Called from Libsail__Pattern_completeness.Make.generalize in file "src/lib/pattern_completeness.ml", line 426, characters 28-63
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded.(fun) in file "src/lib/pattern_completeness.ml", line 1053, characters 73-103
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml", line 93, characters 15-21
  [91m |[0m Called from Stdlib__List.mapi in file "list.ml" (inlined), line 100, characters 15-25
  [91m |[0m Called from Libsail__Pattern_completeness.Make.is_complete_mapcls_wildcarded in file "src/lib/pattern_completeness.ml", line 1053, characters 11-113
  [91m |[0m Called from Libsail__Type_check.check_mapdef_completeness in file "src/lib/type_check.ml", line 4571, characters 8-63
  [91m |[0m Called from Libsail__Type_check.check_mapdef in file "src/lib/type_check.ml", line 4622, characters 9-57
  [91m |[0m Called from Libsail__Type_check.check_defs_progress.aux in file "src/lib/type_check.ml", line 5160, characters 20-37
  [91m |[0m 
  [91m |[0m Please report this as an issue on GitHub at https://github.com/rems-project/sail/issues

hello_world.sail ....................... [92mok[0m
poly_pair.sail ......................... [92mok[0m
all_even_vector_length.sail ............ [92mok[0m
pr194.sail ............................. [92mok[0m
match_bind.sail ........................ [92mok[0m
mapping.sail ........................... [92mok[0m
list_torture.sail ...................... [92mok[0m
stack_struct.sail ...................... [92mok[0m
struct_pattern.sail .................... [92mok[0m
issue429.sail .......................... [92mok[0m
list_scope2.sail ....................... [92mok[0m
nexp_synonym.sail ...................... [92mok[0m
shadow_let.sail ........................ [92mok[0m
infix_include.sail ..................... [92mok[0m
inc_tests.sail ......................... [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_issue232 -o issue232_ocaml issue232.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Incomplete pattern match statement at [96missue232.sail[0m:6.0-7:
6[96m |[0mmapping e_pair_bits : (E,E) <-> bits(2) =
 [91m |[0m[91m^-----^[0m
 [91m |[0m 
The following expression is unmatched: [93m(EB, EA)[0m

Fatal error: exception Not_found

short_circuit.sail ..................... [92mok[0m
single_guard.sail ...................... [92mok[0m
reg_ref_nb.sail ........................ [92mok[0m
exn_hello_world.sail ................... [92mok[0m
zero_length_bv.sail .................... [92mok[0m
warl.sail .............................. [92mok[0m
encdec_subrange.sail ................... [92mok[0m
struct.sail ............................ [92mok[0m
poly_tup.sail .......................... [92mok[0m
warl2.sail ............................. [92mok[0m
scattered_mapping.sail ................. [92mok[0m
new_bitfields.sail ..................... [92mok[0m
nested_mapping.sail .................... [92mok[0m
pow2.sail .............................. [92mok[0m
vector_example.sail .................... [92mok[0m
poly_record.sail ....................... [92mok[0m
non_unique.sail ........................ [92mok[0m
poly_union.sail ........................ [92mok[0m
config.sail ............................ [92mok[0m
string_take.sail ....................... [92mok[0m
letbind.sail ........................... [92mok[0m
int_struct_constrained.sail ............ [92mok[0m
concurrency_interface.sail ............. [92mok[0m
[91mFailed[0m: /home/trdthg/repo/sail/sail -ocaml -ocaml_build_dir _sbuild_encdec -o encdec_ocaml encdec.sail
[94mstdout[0m:

[94mstderr[0m:
[93mWarning[0m: Deprecated [96mencdec.sail[0m:30.24-82:
30[96m |[0mval main : unit -> unit effect {barr, eamem, escape, exmem, rmem, rreg, wmv, wreg}
  [91m |[0m                        [91m^--------------------------------------------------------^[0m
  [91m |[0m 
Explicit effect annotations are deprecated. They are no longer used and can be removed.

[93mWarning[0m: Incomplete pattern match statement at [96mencdec.sail[0m:11.0-7:
11[96m |[0mmapping decenc_p : bits(2) <-> pred = {
  [91m |[0m[91m^-----^[0m
  [91m |[0m 
The following expression is unmatched: [93m0b10[0m

Fatal error: exception Not_found

option_nest.sail ....................... [92mok[0m
option.sail ............................ [92mok[0m
struct_pattern_partial.sail ............ [92mok[0m
tl_poly_match.sail ..................... [92mok[0m
bitvector.sail ......................... [92mok[0m
cfold_reg.sail ......................... [92mok[0m
list_scope3.sail ....................... [92mok[0m
string_of_bits2.sail ................... [92mok[0m
poly_simple.sail ....................... [92mok[0m
issue202_1.sail ........................ [92mok[0m
vector_init.sail ....................... [92mok[0m
bv_literal.sail ........................ [92mok[0m
option_option.sail ..................... [92mok[0m
loop_exception.sail .................... [92mok[0m
outcome_impl.sail ...................... [92mok[0m
[94m164 passes and 12 failures[0m

==========================================
SMT tests
==========================================

==========================================
Builtins tests
==========================================
Sail is /home/trdthg/repo/sail/sail
Sail dir is /home/trdthg/repo/sail
----------------------------------------------------
Testing builtins: C, No optimisations Sail options: 
----------------------------------------------------
zeros.sail [92mok[0m
replicate_bits.sail [92mok[0m
div_int.sail [92mok[0m
unsigned6.sail [92mok[0m
slice_mask.sail [92mok[0m
div_int2.sail [92mok[0m
unsigned3.sail [92mok[0m
set_slice_bits.sail [92mok[0m
not_bool.sail [92mok[0m
hex_str.sail [92mok[0m
get_slice_int.sail [92mok[0m
unsigned1.sail [92mok[0m
clz.sail [92mok[0m
vector_update_subrange.sail [92mok[0m
sub_int.sail [92mok[0m
unsigned4.sail [92mok[0m
vector_update.sail [92mok[0m
divmod.sail [92mok[0m
unsigned7.sail [92mok[0m
unsigned5.sail [92mok[0m
count_leading_zeros.sail [92mok[0m
shl_int.sail [92mok[0m
shift.sail [92mok[0m
add_bits.sail [92mok[0m
append.sail [92mok[0m
unsigned8.sail [92mok[0m
mult_int.sail [92mok[0m
unsigned2.sail [92mok[0m
signed.sail [92mok[0m
[94m29 passes and 0 failures[0m
---------------------------------------------------
Testing builtins: C, Optimisations Sail options: -O
---------------------------------------------------
zeros.sail [92mok[0m
replicate_bits.sail [92mok[0m
div_int.sail [92mok[0m
unsigned6.sail [92mok[0m
slice_mask.sail [92mok[0m
div_int2.sail [92mok[0m
unsigned3.sail [92mok[0m
set_slice_bits.sail [92mok[0m
not_bool.sail [92mok[0m
hex_str.sail [92mok[0m
get_slice_int.sail [92mok[0m
unsigned1.sail [92mok[0m
clz.sail [92mok[0m
vector_update_subrange.sail [92mok[0m
sub_int.sail [92mok[0m
unsigned4.sail [92mok[0m
vector_update.sail [92mok[0m
divmod.sail [92mok[0m
unsigned7.sail [92mok[0m
unsigned5.sail [92mok[0m
count_leading_zeros.sail [92mok[0m
shift.sail [92mok[0m
shl_int.sail [92mok[0m
add_bits.sail [92mok[0m
append.sail [92mok[0m
unsigned8.sail [92mok[0m
mult_int.sail [92mok[0m
unsigned2.sail [92mok[0m
signed.sail [92mok[0m
[94m29 passes and 0 failures[0m
-------------------------------------------------------------------
Testing builtins: C, Constant folding Sail options: -Oconstant_fold
-------------------------------------------------------------------
replicate_bits.sail [92mok[0m
zeros.sail [92mok[0m
unsigned6.sail [92mok[0m
div_int.sail [92mok[0m
slice_mask.sail [92mok[0m
set_slice_bits.sail [92mok[0m
unsigned3.sail [92mok[0m
div_int2.sail [92mok[0m
hex_str.sail [92mok[0m
not_bool.sail [92mok[0m
get_slice_int.sail [92mok[0m
unsigned1.sail [92mok[0m
clz.sail [92mok[0m
vector_update_subrange.sail [92mok[0m
sub_int.sail [92mok[0m
unsigned4.sail [92mok[0m
vector_update.sail [92mok[0m
divmod.sail [92mok[0m
unsigned5.sail [92mok[0m
unsigned7.sail [92mok[0m
count_leading_zeros.sail [92mok[0m
shift.sail [92mok[0m
shl_int.sail [92mok[0m
add_bits.sail [92mok[0m
append.sail [92mok[0m
mult_int.sail [92mok[0m
unsigned2.sail [92mok[0m
unsigned8.sail [92mok[0m
signed.sail [92mok[0m
[94m29 passes and 0 failures[0m
--------------------------------------
Testing builtins: OCaml Sail options: 
--------------------------------------
zeros.sail [92mok[0m
replicate_bits.sail [92mok[0m
div_int.sail [92mok[0m
unsigned6.sail [92mok[0m
slice_mask.sail [92mok[0m
div_int2.sail [92mok[0m
set_slice_bits.sail [92mok[0m
unsigned3.sail [92mok[0m
not_bool.sail [92mok[0m
hex_str.sail [92mok[0m
get_slice_int.sail [92mok[0m
unsigned1.sail [92mok[0m
clz.sail [92mok[0m
vector_update_subrange.sail [92mok[0m
sub_int.sail [92mok[0m
unsigned4.sail [92mok[0m
vector_update.sail [92mok[0m
divmod.sail [92mok[0m
unsigned7.sail [92mok[0m
unsigned5.sail [92mok[0m
shift.sail [92mok[0m
shl_int.sail [92mok[0m
count_leading_zeros.sail [92mok[0m
add_bits.sail [92mok[0m
append.sail [92mok[0m
mult_int.sail [92mok[0m
unsigned8.sail [92mok[0m
unsigned2.sail [92mok[0m
signed.sail [92mok[0m
[94m29 passes and 0 failures[0m

==========================================
ARM spec tests
==========================================
Compiling specification...
compiled no_vector specification: [0;92mok[0m
ran test.elf: [0;92mok[0m
ran test_O1.elf: [0;92mok[0m
ran test_O2.elf: [0;92mok[0m
ran test_Og.elf: [0;92mok[0m

Loading specification into interpreter...
loaded no_vector specification: [0;92mok[0m
interpreter success: [0;92mok[0m
ARM generated spec tests: Passed 7 out of 7

